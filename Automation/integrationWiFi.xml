<?xml version="1.0"?>
<!DOCTYPE doc PUBLIC "-//ERICSSON//DTD XSEIF 1/FAD 110 05 R6//EN" "XSEIF_R6.dtd">
<doc xmlns="urn:x-ericsson:r2:reg-doc:1551-fad.110.05:en:*" version="XSEIF R6" toc-show="expanded" toc-level="toc2" list-of-figures="lof-no" list-of-tables="lot-no" boxed-graphics="bg-no" boxed-examples="be-no" table-caption="tc-yes" math-support="ms-no" index-support="is-no" publication-no="doc-id" new-page-right="npr-no" cover-back="cb-no">
<meta-data>
  <confidentiality class="ericsson-internal"/>
  <doc-name>USER GUIDE</doc-name>
  <doc-id>
    <doc-no type="reference">1/1553-HAX 101 09/1</doc-no>
    <language code="en"/>
    <rev>V</rev>
    <date><y>2017</y><m>05</m><d>03</d></date>
  </doc-id>
  <company-id>
    <business-unit/>
    <company-name>Ericsson AB</company-name>
    <company-symbol logotype="ericsson"/>
  </company-id>
  <title>Integration Guide for WiFi Calling for Multi Device Solution</title>
  <subtitle>Ericsson Certificate Administration Server</subtitle>
  <drafted-by>
<person>
<name>Juha Ritvanen</name>
<signature>LMFJURI</signature>
<location/><company/><department/>
</person>
</drafted-by>
  <approved-by approved="yes">
    <person>
      <name>Harri Reiman</name>
      <signature>lmfhar</signature>
      <location/>
      <company/>
      <department>BICPAHHB</department>
    </person>
  </approved-by>
</meta-data>
<front>
  <title-page align-front-graphics="right">
    <copyright><p>© Ericsson AB 2017. All rights reserved.
No part of this document may be reproduced in any form without the
written permission of the copyright owner.</p>
    </copyright>
    <disclaimer><p>The contents of this document are subject to revision
without notice due to continued progress in methodology, design and
manufacturing. Ericsson shall have no liability for any error or damage
of any kind resulting from the use of this document.</p>
    </disclaimer>
    <trademark-list>
    <tm-item><trademark/><owner>All trademarks mentioned herein
are the property of their respective owners. These are shown in the
document Trademark Information.</owner></tm-item>
    </trademark-list>
  </title-page>
</front>
<body>
<chl1 xml:id="general"><title>General</title>
<chl2 xml:id="purpose"><title>Purpose</title>
<p>This document describes how the Ericsson Certificate Administration
Servers (ECAS) Certificate Authority (CA) Solution should be integrated
with the WiFi Calling for Multi Device Solution (referred to as Wifi
Calling Solution throughout the document).</p>
<p>This document intends to describe the CA Solution related aspects that
are specific to the WiFi Calling Solution. The CA Solution installation
specific aspects (such as device or SW installation instructions, and so on)
are described in dedicated document. This document describes which
parameters or configurations are needed in which WiFi Calling Solution,
how they are maintained over time, and how the CA hierarchies, and so on
should be configured in the CA Solution.</p>
<p>Configuring and managing a Public Key Infrastructure (PKI), which the
ECAS solution in practice is, is a complex task. This document aims at
providing a streamlined basic setup, with high security settings. However,
as setting up a full PKI, including secure key generation and CA
configuration, the number of steps is high. Long term system management,
and required organizational documentation aspects are not included.</p>
<p>This document is based on the ECAS used with the Hardware Security
Module (HSM).</p>
<note>
<p>WiFi Calling for Multi Device Solution was formerly known as
Non-SIM Device Solution (NSDS). There are certain screenshots and
references in this document with term NSDS, which refers to the WiFi
Calling for Multi Device Solution.</p>
</note>
</chl2>
<chl2 xml:id="scope_and_approval"><title>Scope and Approval</title>
<p>The document covers the installation of the ECAS Front End (ECAS FE)
and Database (ECAS DB) for a geo-redundant configuration for ECAS 3.3 release.</p>
</chl2>
<chl2 xml:id="revision_history"><title>Revision History</title>
<table condensed="no" indent="column"><caption>Revision History</caption>
<tgroup cols="3">
<colspec colname="col_1" colwidth="133"/>
<colspec colname="col_2" colwidth="133"/>
<colspec colname="col_3" colwidth="133"/>
<thead>
<row>
<entry align="left" valign="top"><tp>Version</tp></entry>
<entry align="left" valign="top"><tp>Date</tp></entry>
<entry align="left" valign="top"><tp>Description</tp></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><tp>U</tp></entry>
<entry align="left" valign="top"><tp>01.02.2017</tp></entry>
<entry align="left" valign="top"><tp>Updates for ECAS NDP 3.2 release.</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>V</tp></entry>
<entry align="left" valign="top"><tp>11.04.2017</tp></entry>
<entry align="left" valign="top"><tp>Updates for ECAS 3.3 release.</tp></entry>
</row>

</tbody>
</tgroup>
</table>
</chl2>
<chl2 xml:id="distribution_and_storage"><title>Distribution and Storage</title>
<p>This document is stored in GASK.</p>
</chl2>
</chl1>
<chl1 xml:id="ecas_configuration_for_wifi_calling_solution"><title>ECAS Configuration for WiFi Calling Solution</title>
<chl2 xml:id="procedure_overview_first_time_configuration"><title>Procedure Overview First Time Configuration</title>
<p>ECAS provides functionality needed to establish and operate a full-blown
Certificate Authority (CA). WiFi Calling Solution utilizes certificate
services of the ECAS component. However, in order to provide CA service
for the WiFi Calling Solution, ECAS must host a CA hierarchy with the
required parameters.</p>
<p>This procedure describes how to establish a Certificate Authority
suitable for WiFi Calling Solution. The procedure is relatively lengthy
containing a large number of steps, of which many are manual. Reason for
this is that, operator specific CA hierarchies with HSM protected key
material must be created, and the bootstrap management certificates are
replaced with operator specific secure certificates. Furthermore, all
keys will be created within the Hardware Security Modules (HSM), thus
assuring that the private keys have never been exposed outside operator’s
physical HSM.</p>
<p>The procedure at high level is as follows (detailed steps in next chapter):</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Preparation; ensure installation and planning is done</p>
</list-item>
<list-item compact="no">
<p>Install HSMs, create Security World and connect all FEs to the HSMs</p>
</list-item>
<list-item compact="no">
<p>Create Management and SSL CAs, issue access certificates</p>
</list-item>
<list-item compact="no">
<p>Revoke access from Bootstrap</p>
</list-item>
<list-item compact="no">
<p>Create WiFi Calling CA hierarchy</p>
</list-item>
<list-item compact="no">
<p>Make restore point, verify all works</p>
</list-item>
<list-item compact="no">
<p>Configure Service Enrollment Manager (SEM) and Authentication, Authorization, Accounting (AAA)</p>
</list-item>
</list>
<p>After the setup, there will be 3 CA hierarchies:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>WiFi Calling Solution production CA hierarchy, with 2 levels (Root<nl/>
Subs)</p>
</list-item>
<list-item compact="no">
<p>ECAS Management CA, for managing access to ECAS interface (human users,
SEM users)</p>
</list-item>
<list-item compact="no">
<p>ECAS SSL CA, for issuing SSL certificates for ECAS FE nodes</p>
</list-item>
</list>
</chl2>
<chl2 xml:id="configuration_details_and_detailed_procedure"><title>Configuration Details and Detailed Procedure</title>
<chl3 xml:id="procedure_hierarchy"><title>Procedure Hierarchy</title>
<p>For network plan and configuration parameters, see
<xref linkend="anchor-integration-records"/>.</p>
<note>
<p>The SSL certificate for the FE will use this
certificate on all interfaces it is serving, that is, the O&amp;M and Traffic.
See the details in the instructions later on.</p>
</note>
<p>For the WiFi Calling Solution following CA hierarchies are
proposed:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Management CA: root level only</p>
</list-item>
<list-item compact="no">
<p>ECAS SSL CA: root level only</p>
</list-item>
<list-item compact="no">
<p>WiFi Calling Solution Root CA (NSDS Root CA)</p>
</list-item>
<list-item compact="no">
<p>WiFi Calling Solution Sub CA (NSDS Issuing Sub CA) (several, prepare
for example 5 years at start, more can be added later)</p>
</list-item>
</list>
<p>The recommended WiFi parameters appendix, <xref linkend="anchor-recommended-wifi-params-appendix"/> contains
proposed basic parameters for key lengths and lifespans.</p>
<p>The high-level proposed setup for the WiFi Calling Solution (NSDS) CA
Hierarchy is as depicted below (root valid for 20 years, subCA renewed
every year with lifespan of 2 years, giving one year time to switch to
the next active issuing CA):</p>
<titled-block show="static"><title>CA Hierarchy</title>
<figure align="left" float="no" indent="column">
<graphics xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="ca_hierarchy.png" xlink:show="embed" xlink:actuate="onLoad" scalefit="1"/>
<caption/>
</figure>
</titled-block>
<p>Each NSDS SubCA will issue the device certificates for the end devices
for maximum period the SubCA is valid. Thus, the subCA must remain valid
at switch to new SubCA for at least the period, while the end device
certificates are valid. Recommendation for end device certificate
lifespan is 6 months. Figure below depicts the overlap.</p>
<titled-block show="static"><title>CA Lifespan Overlap</title>
<figure align="left" float="no" indent="column">
<graphics xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="ca_lifespan_overlap.png" xlink:show="embed" xlink:actuate="onLoad" scalefit="1"/>
<caption/>
</figure>
</titled-block>
<p>Having chronological SubCA hierarchy enables later on chronological
purging of expired certificates.</p>
</chl3>
<chl3 xml:id="prerequisites_not_in_scope_of_this_document"><title>Prerequisites (not in scope of this document)</title>
<p>Confirm the prerequisites are in place:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>In case of geo-redundant setup, the backend network routing
between sites works</p>
</list-item>
<list-item compact="no">
<p>All VMs are installed and running</p>
</list-item>
<list-item compact="no">
<p>Ansible configuration completed successfully</p>
</list-item>
<list-item compact="no">
<p>You have physical access to the HSM hardware</p>
</list-item>
<list-item compact="no">
<p>HSM is installed and connected (ping)</p>
</list-item>
</list>
</chl3>
<chl3 xml:id="anchor-plan-hsmacsocs-quorums"><title>Plan HSM ACS and OCS Quorums</title>
<p>See network plan and configuration parameters and HSM card list records
in <xref linkend="anchor-integration-records"/>.</p>
<p>The Administrator Card Set (ACS) defines the owner of the
Security World. The ACS Quorum is created when a security world is
created. The ACS Quorum must be present when loading Security World to
the module (HSM).</p>
<p>ACS Quorum can override many of the security settings within a Security
World. Therefore cards must be kept safe (in safety boxes), preferably
under dual control. Each card should have a nominated owner / holder, who
can be summoned to perform ACS operations.</p>
<p>It is recommended not to use passphrase protection for simplicity of use.
Passphrase protection is set when ACS quorum (security world) is created.
It is recommended to have Quorum available on each site, so that Security
World / recovery operations can be performed on each site without
unnecessary delays.</p>
<p>For example a quorum of 3 of 8 enables having full quorum on 2 sites
configuration, so that on each site can have quorum of 3 cards, and one
spare card. All ACS cards in one card set are equal, that is, cards from one
site can be used on the other site.</p>
<p>OCS protection can be used for protecting subset of the keys. The OCS
Quorum must be summoned every time keys are to be used. The
recommended quorum is 3 of 5 for management (protecting the
management and SSL CAs). The card holders must be selected according to
the role. For the generic PKI use case new OCS quorums can be created at will.</p>
<p>If it is desired that the OCS quorum can be summoned on each site
independently or simultaneously, then quorum 3 of 8, similarly as the ACS.</p>
<p>If there is no requirement for dual control, and it is accepted that a single
card suffices for OCS operation, quorum 1 of X can be chosen, bearing in
mind the limitations for protection.</p>
<p>Never create quorum X of X (for example 2 of 2) for neither ACS nor OCS,
because if one of the cards breaks, the entire quorum is broken. Always
create extra card(s).</p>
<note>
<p>For production, always make extra cards.</p>
</note>
</chl3>
</chl2>
</chl1>
<chl1 xml:id="integration_steps"><title>Integration Steps</title>
<chl2 xml:id="verify_ecas_basic_installation_and_access"><title>Verify ECAS Basic Installation and Access</title>
<p>Get superadmin certificate for web GUI access:</p>
<step-list>
<sl-item>
<p>Download (use scp or WinSCP) it from site-X-fe-X at:</p>
<stepxmp><preform>
/home/ecas/p12/superadmin.p12
</preform></stepxmp>
</sl-item>
<sl-item>
<p>Install this certificate to your web browser, the password is:</p>
<stepxmp><preform>
changeitagainchangeitagain
</preform></stepxmp>
</sl-item>
</step-list>
<p>Example certificate installation procedure in Firefox:</p>
<step-list>
<sl-item>
<p>Click ALT to open menu, go to <emph type="medium">Tools → Options</emph> or <emph type="medium">Edit → Preferences</emph>.</p>
</sl-item>
<sl-item>
<p>Go to <emph type="medium">Advanced</emph>.</p>
</sl-item>
<sl-item>
<p>Choose <emph type="medium">Certificates → View Certificates</emph></p>
</sl-item>
<sl-item>
<p>Choose Your Certificates → <emph type="medium">Import</emph></p>
</sl-item>
<sl-item>
<p>Press <emph type="medium">Import</emph> button and select the certificate <resource-id type="file-path">superadmin.p12</resource-id> file to import.</p>
</sl-item>
<sl-item>
<p>Enter the password provided (see above).</p>
</sl-item>
<sl-item>
<p>You should see <resource-id type="file-path">"Successfully restored your security certificate(s) and
private key(s)."</resource-id> message.</p>
</sl-item>
</step-list>
<note>
<p>The certificate name appears as BootstrapCA.</p>
</note>
<note>
<p>Problems may occur with (several years) old version of browser.
Please update your browser if necessary.</p>
</note>
<p>Check web GUI at: <ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="https://&lt;site-X-fe-X&gt;:18443/ejbca/adminweb" xlink:title="https://&lt;site-X-fe-X&gt;:18443/ejbca/adminweb">https://&lt;site-X-fe-X&gt;:18443/ejbca/adminweb</ulink></p>
<p>Use management network IP address of any FE VM in the URL. Login with
superadmin certificate to ensure everything is up and running. You should see
BootstrapCA with green tick next to it.</p>
<chl3 xml:id="import_nsds_profiles_and_default_hierarchies"><title>Import NSDS Profiles and Default Hierarchies</title>
<p>This step will create a template in ECAS for fast NSDS integration with
proposed default profiles and CA hierarchies for WiFi Calling for Multi
Device Solution. The templates are in non-active state, and without keys.
Keys with proper protection, final settings and naming conventions
are set in the following steps.</p>
<p>It is recommended to run this step only on empty ECAS setup. It will not
overwrite existing CAs, keys or settings, however, if some CAs have been
removed, the linking between profiles and CAs as well as other settings
might result in non-defined state.</p>
<note>
<p>This is run only once on <emph type="medium">one</emph> site.</p>
</note>
<p>On site-1-cnf ensure that you have the following parameter configured
correctly in <resource-id type="file-path">/etc/ansible/site-configuration/group_vars/all</resource-id>:</p>
<p><preform>use_case: nsds</preform></p>
<p>Then run the following command on the same host:</p>
<example condensed="yes" indent="column">
<preform>$ ansible-playbook /etc/ansible/site-configuration/use_case.yml</preform>
</example>
<p>The command can take some minutes to execute. After successful execution,
check the ECAS GUI, then you should be able to see the default CA hierarchies.
Navigate to <emph type="medium">CA Functions</emph> &gt; <emph type="medium">Certificate Authorities</emph></p>
<p>The List of Certification Authorities should include:</p>
<p><preform>BootstrapCA, (Active)
OPERATOR_ECAS_MANAGEMENT_CA,(Uninitialized)
OPERATOR_ECAS_SSL_CA_CA,(Uninitialized)
OPERATOR_issuing_subCA_2017,(Uninitialized)
OPERATOR_issuing_subCA_2018,(Uninitialized)
OPERATOR_issuing_subCA_2019,(Uninitialized)
OPERATOR_issuing_subCA_2020,(Uninitialized)
OPERATOR_issuing_subCA_2021,(Uninitialized)
OPERATOR_rootCA,(Uninitialized)</preform></p>
<p><emph type="medium">Tips for potential troubleshooting</emph>:</p>
<p>[1] The EJBCA™ CLI password could be out of sync, in case installation
steps have failed and certain scripts are run for several times, since
they are randomized at installation. Synchronize the password, or
reinstall ECAS initial setup.</p>
</chl3>
</chl2>
<chl2 xml:id="install_hsm_rfs_create_security_world_and_ocs_quorums"><title>Install HSM, RFS, Create Security World and OCS Quorums</title>
<chl3 xml:id="anchor-configure-network-hsm"><title>Configure Basic Ethernet Network Settings in HSM</title>
<p>The unit communicates with one or more clients. Each client is an Ethernet
connected computer that has the Security World Software installed and
configured. You must supply Internet Protocol (IP) addresses for the unit
and the client.</p>
<p>You can specify two network interfaces for the module. To specify a network
interface, select <emph type="medium">System &gt; System configuration &gt; Network config &gt; Set
up interface #1</emph> or <emph type="medium">Set up interface #2</emph>. You specify the IP addresses and
net masks for each interface.</p>
<note>
<p>You should not use the same subnet for
both interfaces.</p>
</note>
<p>From the <emph type="medium">Network config</emph> menu, you also need to specify the following for
the module:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>default gateway</p>
</list-item>
<list-item compact="no">
<p>network routes</p>
</list-item>
<list-item compact="no">
<p>network speed (recommended to be set to auto / 1Gb)</p>
</list-item>
</list>
<p>If the module is already configured, you can update the displayed values.
Reboot the unit after basic network configuration is finished. The reboot
takes a few minutes.</p>
<p>For more details, see document <emph type="medium">nShield Connect and netHSM User
Guide for Unix</emph> document provided by Thales HSM manufacturer.</p>
</chl3>
<chl3 xml:id="anchor-setup-rfs-ecasfe"><title>Setup RFS on ECAS FE (FE-OAM)</title>
<note>
<p>In case a separate RFS machine is opted, the RFS should be
set up on that one instead of the FE-OAM. There can be only one RFS for one HSM.
One RFS can serve multiple HSMs.</p>
</note>
<p>Login to the VM where RFS is installed (usually FE-OAM includes RFS).</p>
<note>
<p>Perform this for all HSMs on the site.</p>
</note>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./enquiry
Server:
 enquiry reply flags  none
 enquiry reply level  Six
 serial number
 mode                 operational
 version              3.21.3
 speed index          0
 rec. queue           2..50
 level one flags      none
 version string       3.21.3cam7,
 checked in           00000000487debd5 Wed Jul 16 15:38:45 2008
 level two flags      none
 max. write size      8192
 level three flags    none
 level four flags     ServerHasPollCmds ServerHasLongJobs
                      ServerHasCreateClient
 module type code     0
 product name         nFast server
 device name
 EnquirySix version   4
 impath kx groups
 feature ctrl flags   none
 features enabled     none
 version serial       0
 remote server port   9004
# exit</preform>
</example>
<p>This command shows that <resource-id type="file-path">mode is operational</resource-id>, and that modules are
not yet connected at this time (<resource-id type="file-path">Modules# sections</resource-id> are not shown).</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./anonkneti &lt;IP of HSM&gt;
35AD-F61C-7CAC c40ea39ecb116978316a812e50ce780aa0a6bb2e
# exit</preform>
</example>
<p>This will display the ELECTRONIC SERIAL NUMBER (ESN) and HASH of
the HSM, which have to be entered to the command below:</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./rfs-setup &lt;IP of HSM&gt; &lt;SERIAL&gt; &lt;HASH&gt;
Adding read-only remote_file_system entries
Ensuring the directory /opt/nfast/kmdata/local exists
Adding new writable remote_file_system entries
Ensuring the directory /opt/nfast/kmdata/hsm-35AD-F61C-
7CAC exists
Ensuring the directory /opt/nfast/femcerts exists
Ensuring the directory /opt/nfast/kmdata/hsm-35AD-F61C-
7CAC/features exists
Ensuring the directory /opt/nfast/kmdata/hsm-35AD-F61C-
7CAC/config exists
Ensuring the directory /opt/nfast/log/hsm-35AD-F61C-7CAC
exists
Saving the new config file and configuring the
hardserver
Done
# exit</preform>
</example>
</chl3>
<chl3 xml:id="anchor-setup-rfs-hsm"><title>Setup RFS on HSM</title>
<p>Smartcards are not yet needed to be inserted to HSM in this step.</p>
<p>On the HSM Front Panel, navigate to:</p>
<p><emph type="medium">Menu → System → System Configuration → Remote File System</emph></p>
<p>Define the IP of the FE as the RFS (usually site-1-fe-oam, which typically
holds also the RFS). This is the ECAS internal/backend network IP of the
FE.</p>
</chl3>
<chl3 xml:id="create_security_world_on_hsm_for_maiden_installation"><title>Create Security World on HSM for Maiden Installation</title>
<p>This section describes the steps for setting up the ACS cards
(Administrator Card Set). Have them ready and labelled.</p>
<note>
<p>The agreed quorums should be defined in the
<xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">HSM agreed quorums</resource-id>.</p>
</note>
<admonition type="warning">
<p>Never use X of X in production. Always have X of Y, where Y &gt; X.</p>
</admonition>
<p>Perform the following:</p>
<step-list>
<sl-item>
<p>Navigate to <emph type="medium">Menu → Security World Management → Module
Initialization → New Security World</emph></p>
<note>
<p>Connection from RFS is lost when this option is selected (
Define the security quorums. Choose to specify all quorums.</p>
</note>
</sl-item>
<sl-item>
<p>Choose <emph type="medium">Encryption AES original</emph>.</p>
</sl-item>
<sl-item>
<p>Choose <emph type="medium">NO</emph> whether to use FIPS 140-2 level 3.</p>
<p>There will be several quorum option screen displayed, such as Module prog.
Quorum and Key recovery quorum. In each of these screens, select the
same quorum you entered in the Admin cardset quorum setting before. That
is, if you have 3 of 8 quorum, select the <resource-id type="file-path">Require 3 of 8</resource-id> on each screen,
then press <emph type="medium">SELECT</emph>.</p>
</sl-item>
<sl-item>
<p>When asked, <resource-id type="file-path">Do you want to make module 1 a valid target for remote
shares?</resource-id>, select the default <emph type="medium">YES</emph>.</p>
</sl-item>
<sl-item>
<p>Choose <emph type="medium">NO</emph> whether to give a passphrase.</p>
</sl-item>
<sl-item>
<p>Insert cards as requested.</p>
<note>
<p>It will take some time to create the Security World, be patient.</p>
</note>
</sl-item>
</step-list>
<p>The following messages are displayed in the end of the procedure:</p>
<p><preform>Please wait a few seconds -- cleaning up
New world created successfully</preform></p>
<p>This will create the following (sample) files in <resource-id type="file-path">/opt/nfast/kmdata/local</resource-id>:</p>
<p><preform>-rw-rw-r-- 1 nfast nfast 19748 Jun 17 11:48 world
-rw-rw-r-- 1 nfast nfast 856 Jun 17 11:48
module_35AD-F61C-7CAC</preform></p>
<p><xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">ACS HSM
cards record</resource-id>.</p>
</chl3>
<chl3 xml:id="load_security_world_to_2nd_hsm"><title>Load Security World to 2nd HSM</title>
<p>Perform steps in <xref linkend="anchor-setup-rfs-ecasfe"/> and
<xref linkend="anchor-setup-rfs-hsm"/> to setup the RFS for the 2nd
HSM. Then, on the HSM, navigate to:</p>
<p><emph type="medium">Menu → Security World Management → Module Initialization → Load
Security World</emph></p>
<p>Load Security World to the 2nd HSM. Present ACS cards as requested
(number of required cards depending on the quorum settings).</p>
</chl3>
<chl3 xml:id="anchor-enable-clients-hsm"><title>Enable Additional Clients to the HSM</title>
<p>In this step, you will need a separately orderable Client license card,
if you are planning to connect more than 3 clients.
This Client license card has the following information printed in the card:</p>
<p><preform>Serial Number: &lt;serial number&gt;
ESN: &lt;ESN&gt;
Features Enabled
Client licenses(s)
# clients</preform></p>
<note>
<p>The ESN (Electronic Serial Number) number in the license card must
match the ESN number of the HSM unit.</p>
</note>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./anonkneti &lt;IP_of_the_HSM_unit&gt;
# exit</preform>
</example>
<p>This will show the ESN and a hash number, for example:</p>
<p><preform>5AFC-F668-AAAF e026ee4fd2f5fae707a083c4df95a352d3999a7b</preform></p>
<p>On HSM navigate to:</p>
<p><emph type="medium">Menu → HSM → HSM feature enable → Read FEM from card</emph></p>
<p>Insert the Feature card as requested.</p>
</chl3>
<chl3 xml:id="add_ecas_fes_as_clients_to_hsm"><title>Add ECAS FEs As Clients to HSM</title>
<p>On HSM navigate to:</p>
<p><emph type="medium">Menu → System → System Configuration → Client config → New Client</emph></p>
<p>Enter the ECAS Internal / backend network IP of the FE.</p>
<note>
<p>Add only FE-OAM as <emph type="medium">Privileged on any port</emph>.
Add all other FEs (including FE-RCA if configured) as <emph type="medium">Unprivileged</emph>.</p>
</note>
<p>Make clients NOT to use nTokens.</p>
<p>REPEAT for all FEs (ECAS Internal / backend network IP), for all HSMs.</p>
</chl3>
<chl3 xml:id="connect-1st-ecasfe-hsm"><title>Connect 1st ECAS FE (FE-OAM on site 1) to HSM</title>
<p>Connect the HSM with <resource-id type="file-path">nethsmenroll</resource-id>:</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./nethsmenroll &lt;IP of HSM1&gt;
Remote module returned ESN: 35AD-F61C-7CAC
HKNETI:
c40ea39ecb116978316a812e50ce780aa0a6bb2e
Is the above correct? (yes/no): yes
OK configuring hardserver's nethsm imports
# exit</preform>
</example>
<p>Check that the HSM was connected correctly:</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./enquiry
Server:
 enquiry reply flags  none
 enquiry reply level  Six
 serial number        XXXX-XXXX-XXXX
 mode                 operational
...
Module #1:
 enquiry reply flags  UnprivOnly
 enquiry reply level  Six
 serial number        XXXX-XXXX-XXXX
 mode                 operational
...
# exit</preform>
</example>
<p>In the above output <resource-id type="file-path">Module #1</resource-id> and its serial number should appear.
The mode should be <resource-id type="file-path">operational</resource-id>. The above output is truncated.</p>
</chl3>
<chl3 xml:id="connect_2nd_hsm_to_fe_oam"><title>Connect 2nd HSM to FE-OAM</title>
<p>Repeat steps described in <xref linkend="connect-1st-ecasfe-hsm"/>
for the 2nd HSM.</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./nethsmenroll &lt;IP of HSM2&gt;
# exit</preform>
</example>
<p>See <xref linkend="connect-1st-ecasfe-hsm"/> for details.
The <resource-id type="file-path">/opt/nfast/bin/enquiry</resource-id> command should now show <resource-id type="file-path">Module #1</resource-id> and
<resource-id type="file-path">Module #2</resource-id> information.</p>
</chl3>
<chl3 xml:id="connect_rest_of_the_fes_on_site_1_to_hsms"><title>Connect Rest of the FEs on Site 1 to HSMs</title>
<p>Repeat following for <emph type="medium">all FEs on site 1</emph>:</p>
<step-list>
<sl-item>
<p>From the RFS machine (FE-OAM), copy world and module files.</p>
<p><resource-id type="file-path">/opt/nfast/kmdata/local</resource-id>:</p>
<stepxmp><preform>
-rw-rw-r-- 1 nfast nfast 19748 Jun 17 11:48 world
-rw-rw-r-- 1 nfast nfast 856 Jun 17 11:48 module_XXXX-XXXX-XXXX
-rw-rw-r-- 1 nfast nfast 856 Jun 17 11:50 module_YYYY-YYYY-YYYY
</preform></stepxmp>
<p><emph type="medium">to</emph> <resource-id type="file-path">/opt/nfast/kmdata/local</resource-id> <emph type="medium">on all of the other FEs</emph> in the site.
Ensure that the user &amp; group names end up the same. Use chown, if needed.</p>
<p>Step-by-step commands:</p>
<substeps>
<substep>
<p>On the source (site-1-fe-oam) tar and scp:</p>
<stepxmp>
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# tar cvfp /tmp/HSM_files.tar world module*
# scp /tmp/HSM_files.tar ecas@&lt;IP of site-1-fe-x&gt;:/tmp/
# exit</preform>
</stepxmp>
</substep>
<substep>
<p>In target FE node (including FE-RCA if configured), extract files to intended
location and check that the files have correct ownership.</p>
<stepxmp>
<preform>$ sudo -i
# tar xvfp /tmp/HSM_files.tar -C /opt/nfast/kmdata/local/
# ls -ltr /opt/nfast/kmdata/local/
# exit</preform>
</stepxmp>
<p>If not correct, run the following:</p>
<stepxmp>
<preform>$ sudo chown nfast:nfast /opt/nfast/kmdata/local/world \
/opt/nfast/kmdata/local/module*</preform>
</stepxmp>
</substep>
</substeps>
</sl-item>
<sl-item>
<p>Enroll the HSMs to the other FEs.</p>
<p>On each FE (including FE-RCA if configured) on site 1, run:</p>
<stepxmp>
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./nethsmenroll &lt;IP of HSM1&gt;
# ./nethsmenroll &lt;IP of HSM2&gt;
# exit</preform>
</stepxmp>
<p>Ensure that this is run for <emph type="medium">both HSMs</emph> (see previous steps for details)</p>
<note>
<p>Please run nethsmenroll in the same order for the HSMs on each FE,
to get them identified as <resource-id type="file-path">Module#1</resource-id> and <resource-id type="file-path">Module#2</resource-id> in the same order on all
FEs.</p>
</note>
</sl-item>
<sl-item>
<p>Ensure that both modules are connected, using the following command:</p>
<stepxmp>
<preform>$ sudo -i
# /opt/nfast/bin/enquiry
# exit</preform>
</stepxmp>
<p>See previous steps to interpret the output.</p>
</sl-item>
</step-list>
</chl3>
</chl2>
<chl2 xml:id="anchor-configure-2ndsite-rfshsms"><title>Configure Second Site HSMs and FE VMs</title>
<chl3 xml:id="configure_second_site_rfs_and_hsms"><title>Configure Second Site RFS and HSMs</title>
<note>
<p>It is not necessary to do SITE 2 configuration at this step.
This step can be done also when SITE 1 configuration has been finished,
in case getting to SITE 2 involves for example long travel.</p>
</note>
<p>Preparation: Configure HSM networking, as described in
<xref linkend="anchor-configure-network-hsm"/>
, and enable additional clients, as described in
<xref linkend="anchor-enable-clients-hsm"/>.</p>
<step-list>
<sl-item>
<p>From the source site-1-fe-oam copy world file to site-2-fe-oam (or separate
RFS FE if you have that configured).</p>
<stepxmp>
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# scp world ecas@&lt;IP of site-2-fe-oam&gt;:
# exit</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>In the target site-2-fe-oam move world file to the correct location.</p>
<admonition type="danger">
<p>Make sure the file has correct ownership.</p>
</admonition>
<stepxmp>
<preform>$ sudo mv world /opt/nfast/kmdata/local
$ sudo chown nfast:nfast /opt/nfast/kmdata/local/world</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>Setup RFS:</p>
<admonition type="danger">
<p>Perform this for all HSMs on this site.</p>
</admonition>
<note>
<p>There can only be one IP defined for RFS per HSM. This means that
if you are sharing an HSM unit with another site, the rfs-setup must
only be run on one site’s FE-OAM, NOT both.</p>
</note>
<stepxmp>
<preform>$ sudo -i
# /opt/nfast/bin/anonkneti &lt;IP of HSM&gt;
XXXX-XXXX-XXXX abcdef9ecb116978316a812e50ce780aa0a6bb2e
# exit</preform>
</stepxmp>
<p>This will display the <emph type="medium">SERIAL</emph> and <emph type="medium">HASH</emph> of the HSM, which must be
included in the command below:</p>
<stepxmp condensed="yes">
<preform>$ sudo -i
# /opt/nfast/bin/rfs-setup &lt;IP of HSM&gt; &lt;SERIAL&gt; &lt;HASH&gt;</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>On the HSM, navigate to:</p>
<p><emph type="medium">Menu → System → System Configuration → Remote File System</emph></p>
<p>Add the FE-OAM (ECAS Internal network IP) as the RFS for all HSMs on
the site.</p>
<note>
<p>There can be only 1 IP defined for Remote File System per HSM.</p>
</note>
</sl-item>
<sl-item>
<p>Load Security World to the HSMs.</p>
<p>On the HSM, navigate to (do this on both HSMs):</p>
<p><emph type="medium">Menu → Security World Management → Module Initialization → Load
Security World</emph></p>
<p>Load Security World to the all HSMs on the site. Present ACS cards as
requested.</p>
</sl-item>
<sl-item>
<p>Add clients to the HSMs.</p>
<p>After loading the Security World, add clients (ECAS FEs) to the HSM:</p>
<p><emph type="medium">Menu → System → System Configuration → Client config → New Client</emph></p>
<p>Repeat this step for all FEs on the site, on both HSMs.</p>
<note>
<p>Load the extra client licenses first, as described in previous steps.</p>
</note>
</sl-item>
<sl-item>
<p>Copy module files and world to all FEs and enroll HSMs on all those FEs.</p>
<p>After loading the world to HSM, a file (one for each HSM) will appear on
the RFS machine. Copy these files to all FEs on this 2nd site.</p>
<stepxmp>
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# tar cvfp /tmp/HSM_files.tar world module*
# scp /tmp/HSM_files.tar ecas@&lt;IP of site-2-fe-x&gt;:/tmp/
# exit</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>In the target FE node (including FE-RCA if configured), extract files to the correct
location and check/fix ownership of the files.</p>
<stepxmp>
<preform>$ sudo -i
# tar xvfp /tmp/HSM_files.tar -C /opt/nfast/kmdata/local/
# ls -ltr /opt/nfast/kmdata/local/
# exit</preform>
</stepxmp>
<p>If not <resource-id type="file-path">nfast:nfast</resource-id>, change the ownerships accordingly.</p>
<stepxmp>
<preform>$ sudo chown nfast:nfast /opt/nfast/kmdata/local/world \
/opt/nfast/kmdata/local/module*</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>Enroll the HSMs on all FEs on this site.</p>
<stepxmp>
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./nethsmenroll &lt;IP of HSM1&gt;
# ./nethsmenroll &lt;IP of HSM2&gt;
# exit</preform>
</stepxmp>
<p>Ensure that this is run for <emph type="medium">both HSMs</emph> (see previous steps for details)</p>
<note>
<p>Please run nethsmenroll in the same order for the HSMs on each FE,
to get them identified as <resource-id type="file-path">Module#1</resource-id> and <resource-id type="file-path">Module#2</resource-id> in the same order on all
FEs.</p>
</note>
</sl-item>
<sl-item>
<p>Ensure both modules are connected ok in all SITE 2 FEs, with:</p>
<stepxmp>
<preform>$ sudo -i
# /opt/nfast/bin/enquiry
# exit</preform>
</stepxmp>
<p>See previous steps to interpret the output.</p>
</sl-item>
</step-list>
<p>If SITE 1 integration has already been finished, proceed with the next
substep in <xref linkend="anchor-site2-config-steps"/>.</p>
</chl3>
</chl2>
<chl2 xml:id="login_to_site_1_fe_oam_and_verify_logging_state"><title>Login to site-1-fe-oam and Verify Logging State</title>
<p>Use SSH to login through O&amp;M network.</p>
<step-list>
<sl-item>
<p>Ensure that logging is enabled
(If previous steps were executed on SITE 2, return to work on SITE 1).</p>
<p>By default, ECAS FE starts with logging enabled. Check the status from
ECAS FE using:</p>
<stepxmp>
<preform>$ sudo -i
# /usr/local/sbin/ecas audit state
EJBCA Audit logging is enabled
# exit</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>If not enabled, run:</p>
<stepxmp>
<preform>$ sudo -i
# /usr/local/sbin/ecas audit -br enable
# exit</preform>
</stepxmp>
</sl-item>
</step-list>
<p>We will disable the logging at the end of integration steps for optimized
traffic throughput.</p>
</chl2>
<chl2 xml:id="create_ocs_quorums_for_management"><title>Create OCS Quorums for Management</title>
<p>See records for agreed quorums in <xref linkend="anchor-integration-records"/>.</p>
<p>Management OCS will protect crypto token holding keys to add more users
to management interface, and to issue SSL certificates for internal use.
Every time Management or SSL CA is to be used, the Mgmt OCS Quorum
must be loaded in prior. The related key material, and OCS files are to be
stored only on the FE-OAM (copied to FE-OAM of the other site in later steps),
to ensure no misuse possibilities from other FEs.</p>
<note>
<p>Before you begin, make sure the HSM you are working with does not have any cards
inserted.</p>
</note>
<p>Run this command and insert empty cards as requested. Do not give a passphrase.</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./createocs -m 1 --ocs-quorum=1/1 --name=Mgmt --persist --timeout=2h

Creating Cardset:
Module 1: 0 cards of 1 written
Module 1 slot 0: empty
Module 1 slot 0: blank card
Module 1 slot 0:- no passphrase specified - writing
card
Card writing complete.

cardset created; hkltu =
0ee725000badd180880cf2dacef477861dedc0a1
# exit</preform>
</example>
<p>Create OCS options:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p><emph type="medium">-m &lt;#&gt;</emph> defines, which HSM is used</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">--ocs-quorum=&lt;n&gt;/&lt;m&gt;</emph> defines the quorum for the OCS (n out of m cards,
m &gt;= n)</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">--name=&lt;ocs name&gt;</emph> defines the name for the OCS (all references to the
OCS are done by this name later on)</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">--persist</emph> means that the OCS remains loaded, as long as the application
uses it, even after the last OCS card is removed</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">--timeout=&lt;x&gt;h</emph> defines how long the OCS remains loaded after the last
card is removed, when persistent. Also m or s for minutes / seconds can be
used.</p>
</list-item>
</list>
<note>
<p>The default timeout 2h can be too short for complete setup (if any
delays are expected). Adjust this value if necessary. Be aware also that,
when the timeout has happened, the card must be physically removed and
put back to the HSM to load it again.</p>
</note>
<note>
<p>In the sample command above, we have defined Management OCS
quorum to be 1 of 1. In production environment, the quorum should be
higher, for example 3 out of 5. See
<xref linkend="anchor-plan-hsmacsocs-quorums"/> for more
information.</p>
</note>
<p>This step will create a cardset file (filename <resource-id type="file-path">cards_*</resource-id>) and one card file for
each OCS card (filenames <resource-id type="file-path">card_*</resource-id>) in the following directory:</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# ls -lA /opt/nfast/kmdata/local/
total 32
-rw-r--r-- 1 root nfast 116 Jun 17 12:43
card_0ee725000badd180880cf2dacef477861dedc0a1_1
-rw-r--r-- 1 root nfast 108 Jun 17 12:43
cards_0ee725000badd180880cf2dacef477861dedc0a1
-rw-rw-r-- 1 nfast nfast 860 Jun 17 11:48 module_35ADF61C-7CAC
-rw-rw-r-- 1 nfast nfast 19764 Jun 17 11:48 world
# exit</preform>
</example>
<p>Take a note in <xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">Card
files are mapped to which physical cards</resource-id> &gt; <resource-id type="file-path">For management OCS</resource-id> (about which
files correspond to which card set for auditability and later reference).</p>
<chl3 xml:id="create_root_ocs"><title>Create Root OCS</title>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Run this on FE-RCA (for example site-1-fe-rca) on site 1.</p>
</list-item>
<list-item compact="no">
<p>Give the Online Certificate Status (OCS) the exact name of <emph type="medium">Root</emph> (capital R, rest lowercase).</p>
</list-item>
<list-item compact="no">
<p>Set the agreed quorum for <emph type="medium">Root OCS Quorum</emph>.
<xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">HSM agreed
quorums</resource-id>.</p>
</list-item>
</list>
<p>The Root key material is stored on that VM (only), in encrypted format,
and should not be distributed to other VMs. The Root CA will be protected
by the Root OCS, which means that every time a root key is needed (for
example when issuing a new subCA certificate), the OCS quorum must be
summoned.</p>
<p>Run the command and insert empty cards as requested.</p>
<note>
<p>Refer to the agreed quorum. Do not give a passphrase.</p>
</note>
<p>This step will create card_* and cards_* files into the
<resource-id type="file-path">/opt/nfast/kmdata/local</resource-id> directory (number of card_* files depending on
the quorum setting).</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/bin
# ./createocs -m 1 --ocs-quorum=2/2 --name=Root --persist --timeout=2h

Creating Cardset:
 Module 1: 0 cards of 2 written
 Module 1 slot 0: `Mgmt' #1
 Module 1 slot 0: empty
 Module 1 slot 0: blank card
 Module 1 slot 0:- no passphrase specified - writing card
 Module 1: 1 card of 2 written
 Module 1 slot 0: remove already-written card #1
 Module 1 slot 0: empty
 Module 1 slot 0: unformatted card
 Module 1 slot 0:- no passphrase specified - writing card
Card writing complete.

cardset created; hkltu = 7fea64065cbba3cc4900bdddbedd3a71f8d78105
# exit</preform>
</example>
<note>
<p>The default 2 hours timeout might be too short for complete setup
(if any delays are expected). Adjust this value if necessary.</p>
</note>
<note>
<p>In the sample command above, we have defined Management OCS quorum
to be 2 of 2. In production environment, the quorum should be higher,
for example 3 out of 5. See <xref linkend="anchor-plan-hsmacsocs-quorums"/>
for more information.</p>
</note>
<p>Take a note in
<xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">Which card files are
mapped to which physical cards</resource-id> &gt; <resource-id type="file-path">For RootCA OCS</resource-id>.</p>
</chl3>
</chl2>
<chl2 xml:id="create_management_and_ssl_cas_and_swap_out_bootstrap_access"><title>Create Management and SSL CAs and Swap Out Bootstrap Access</title>
<chl3 xml:id="load_management_ocs_with_preload_using_mgmt_ocs_cards"><title>Load Management OCS with Preload (using Mgmt OCS cards)</title>
<p>Login to site-1-fe-oam, use SSH to login through O&amp;M network.</p>
<p>Stop Wildfly:</p>
<example condensed="yes" indent="column">
<preform>$ sudo service wildfly stop</preform>
</example>
<p>Then start Wildfly with OCS preload as wildfly user.</p>
<note>
<p>If the OCS protection has timed out the card(s) must be removed
from the HSM and inserted again.</p>
</note>
<example condensed="yes" indent="column">
<preform>$ sudo su wildfly
$ /opt/nfast/bin/preload -c Mgmt -m 1 /opt/wildfly/bin/standalone.sh</preform>
</example>
<note>
<p>The above command loads the Management OCS to HSM #1, cards need to be
inserted only to that module (physically to HSM).</p>
</note>
<admonition type="danger">
<p>Make sure to always execute the above as wildfly user, not root.
Insert cards as requested.</p>
</admonition>
<p>Leave console open with preload running.
Perform OCS related operations (described in next steps), and when done,
hit <emph type="medium">Ctrl+c</emph> in the terminal to shutdown the manually started wildfly (but
only after the next steps).</p>
<note>
<p>The preload will expire without any console logging after the timeout
(the one specified at <emph type="medium">createocs</emph> operation), so you will not be able to create
for example a new keystore. Therefore we advise to finish all operations with
the preload in one go.</p>
</note>
<example condensed="yes" indent="column">
<preform>Loading cardsets:
Mgmt on modules 1
Checking modules and reading cards ...

Loading `Mgmt':

 Module 1 slot 0: empty

Checking modules and reading cards ...

Insert/change card in module 1 (or change module mode)
 &lt;&lt;&lt; INSERT CARDS AS REQUESTED (in this sample case only 1 card is
 used)
Checking modules and reading cards ...
Card reading complete.

Stored Cardset: Mgmt (48cc...) on module #1
Executing /opt/wildfly/bin/standalone.sh
=========================================================================

  JBoss Bootstrap Environment

  JBOSS_HOME: /opt/wildfly

  JAVA: java

  JAVA_OPTS:  -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M
  -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
  -Djboss.modules.system.pkgs=org.jboss.byteman
  -Djava.awt.headless=true

=========================================================================</preform>
</example>
<note>
<p>Later on, when preloading the same cardset, pay attention to the
output from the preload utility. If the defined timeout for the cardset has
expired, the output will look like below, and the keys will not be available:</p>
</note>
<p>FAILING CARDSET LOAD:</p>
<p><preform>Loading cardsets:
Mgmt on modules 1
Stored Cardset: Mgmt (0ee7...) on module #1
LoadBlob of key
pkcs11/uc0ee725000badd180880cf2dacef477861dedc0a1-
71c7beae215671e76bd1c5b0d254c746112fdd48 on module 1
failed: TimeLimitExceeded
LoadBlob of key
pkcs11/uc0ee725000badd180880cf2dacef477861dedc0a1-
797d08d2ebd02998371fdbaa7d34b6594f3d04fe on module 1
failed: TimeLimitExceeded</preform></p>
</chl3>
<chl3 xml:id="generate_management_ca_keys"><title>Generate Management CA Keys</title>
<p>Login to EJBCA™ GUI in FE-OAM, and navigate to <emph type="medium">CA Functions</emph> →
<emph type="medium">Crypto Tokens</emph></p>
<p>Click <emph type="medium">Activate</emph> for <emph type="medium">OPERATOR_ManagementToken</emph> (no passwords) The token
should appear active.</p>
<p>Click the <emph type="medium">OPERATOR_ManagementToken</emph>, and the following view should
appear:</p>
<figure align="left" float="no" indent="column">
<graphics xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="cryptotoken_operator_mantoken.png" xlink:show="embed" xlink:actuate="onLoad" scalefit="1"/>
<caption/>
</figure>
<p>Click <emph type="medium">Generate</emph> for the <emph type="medium">Management_Key</emph>. Generating a large RSA key
can take a few minutes.</p>
<note>
<p>Two files are created, one container, and one actual key. List the
files on the FE-OAM in order to distinguish which files are for this
Management CA.</p>
</note>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# ls -ltr key*
-rw-r--r-- 1 wildfly nfast 4204 Jan 11 16:12 key_pkcs11_
umd0435702d2da0dcb888a98cb5f9f142b6c5b498c-
fdedba9460dbb112251c36f812f4d18ba5cfef16
-rw-r--r-- 1 wildfly nfast 8760 Jan 11 16:12 key_pkcs11_
ucd0435702d2da0dcb888a98cb5f9f142b6c5b498c-
3c2288358100a3ad45125461e4eababfe6fc4e0f
# exit</preform>
</example>
<p>For the Management CA key pair, take a note in
<xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">Which files are
mapped to which management keys</resource-id> &gt;  <resource-id type="file-path">For management keys</resource-id>.</p>
</chl3>
<chl3 xml:id="generate_ssl_ca_keys"><title>Generate SSL CA keys</title>
<p>Likewise, click <emph type="medium">Generate</emph> for the <emph type="medium">SSL_key</emph> and record the
files for it.</p>
<p>List the files on the FE-OAM in order to distinguish which files are for this
SSL CA.</p>
<note>
<p>There are now 2 new key files for SSL CA.</p>
</note>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# ls -ltr key*
-rw-r--r-- 1 wildfly nfast 4204 Jan 11 16:12 key_pkcs11_
umd0435702d2da0dcb888a98cb5f9f142b6c5b498c-
fdedba9460dbb112251c36f812f4d18ba5cfef16
-rw-r--r-- 1 wildfly nfast 8760 Jan 11 16:12 key_pkcs11_
ucd0435702d2da0dcb888a98cb5f9f142b6c5b498c-
3c2288358100a3ad45125461e4eababfe6fc4e0f
-rw-r--r-- 1 wildfly nfast 4164 Jan 11 16:14 key_pkcs11_
umd0435702d2da0dcb888a98cb5f9f142b6c5b498c-
4a62da68b3d2effae7230dc01cbe329c522f9ddd
-rw-r--r-- 1 wildfly nfast 8728 Jan 11 16:14 key_pkcs11_
ucd0435702d2da0dcb888a98cb5f9f142b6c5b498c-
67098f8bfe48e1e36cf0433fb7e77a6c2d5a31e7
# exit</preform>
</example>
<p>For SSL CA key pair, take a note in <xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">Which files are mapped to which management keys</resource-id> &gt; <resource-id type="file-path">For SSL
keys</resource-id> about which files correspond to which CA for auditability and later
reference.</p>
<note>
<p>Optionally, at this step, you can also change the crypto-token name
<emph type="medium">OPERATOR_ManagementToken</emph> to something more customer specific information
through editing the crypto token name.  Click <emph type="medium">Switch to edit mode</emph> and modify
the <emph type="medium">Name</emph> field to a suitable name and click <emph type="medium">Save</emph>.</p>
</note>
<p>Ensure that the crypto token is left active for the next steps. If you change
the crypto token name, click <emph type="medium">Activate</emph> in the Manage Crypto Token view for the
new crypto token name.</p>
</chl3>
</chl2>
<chl2 xml:id="configure_and_activate_management_and_ssl_cas"><title>Configure and Activate Management and SSL CAs</title>
<chl3 xml:id="configure_and_activate_management_ca"><title>Configure and Activate Management CA</title>
<p>Navigate to <emph type="medium">CA Functions</emph> → <emph type="medium">Certification Authorities</emph>,
and choose <emph type="medium">OPERATOR_ECAS_MANAGEMENT_CA</emph> (uninitialized), then click
<emph type="medium">Edit CA</emph>.</p>
<p>If all other parameters are as wished, edit the CN in the <emph type="medium">Subject DN</emph> field
for the CA to match the operator name and your needs.</p>
<admonition type="warning">
<p>The CN cannot be changed after this point.</p>
</admonition>
<p>Then, click <emph type="medium">Save and Initialize</emph>.</p>
<note>
<p>This requires that the preload is still active (that means no
timeouts or other disturbances).</p>
</note>
<p>In case of failing to <emph type="medium">Save and Initialize</emph>, perform the following
checks:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>The OCS has not timed out (if so, remove all OCS cards from the unit,
stop the current preload, stop wildfly; and perform the preload again).</p>
</list-item>
<list-item compact="no">
<p>Check that the crypto-token is active, in case the management
crypto-token shows as red X.</p>
</list-item>
<list-item compact="no">
<p>Click <emph type="medium">Activate</emph>. (for OCS protected slots, the password must be
left empty.</p>
</list-item>
<list-item compact="no">
<p>Once the token is active, the key can be tested; click
<emph type="medium">OPERATOR_ManagementToken</emph>, and choose the key to "test".</p>
</list-item>
</list>
<p>Optionally, it is possible to rename the CA name.</p>
<note>
<p>The CN is the one that will show in the certificates issued
from the CA, the CA name is for ECAS internal use.</p>
</note>
<p>To rename the CA, navigate to <emph type="medium">Certification Authorities</emph>, choose
the CA, give a new name on the bottom of the page, and click <emph type="medium">Rename</emph>:</p>
<titled-block show="static"><title>Manage Certificate Authorites</title>
<figure align="left" float="no" indent="column">
<graphics xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="manage_certificate_authorites.png" xlink:show="embed" xlink:actuate="onLoad" scalefit="1"/>
<caption/>
</figure>
</titled-block>
</chl3>
<chl3 xml:id="anchor-create-management-user"><title>Create Management User</title>
<note>
<p>It is recommended to create individual certificates for all admins who
need access to the CA administration. It is possible to create very granular
access policies for different roles, if needed. In this instruction only one
super admin certificate. You can, however create as many admin certificates
as you like, while the OCS is loaded (and has not timed out).</p>
</note>
<p>The procedure is the following:</p>
<p><emph type="medium">RA Functions → Add end entity</emph></p>
<step-list>
<sl-item>
<p>Provide following parameters:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p><emph type="medium">End Entity Profile</emph>: ManagementEndentityProfile</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Username</emph>: (can be chosen freely)</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Password</emph>: (use strong passwords for the management users)</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">CN (Common Name)</emph>: (can be chosen freely but the same name will be
used also in other sites in geo-redundant setup)</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Certificate Profile</emph>: ManagementCertificateProfile</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">CA</emph>: Management CA</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Token</emph>: p12 file</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>Fetch the certificate for the user: navigate to <emph type="medium">Public Web</emph>.</p>
</sl-item>
<sl-item>
<p>Navigate to <emph type="medium">Create Keystore</emph>.</p>
</sl-item>
<sl-item>
<p>Give the username and password defined earlier in this section.</p>
<p>Make sure to choose a strong key. At least 2048 RSA is recommended.</p>
</sl-item>
<sl-item>
<p>Save the file.</p>
</sl-item>
</step-list>
<p>Repeat the above steps for all management user certificates needed. It is
recommended to create personal individual certificates for all management
users.</p>
<p>Record information of all users needed to
<xref linkend="anchor-integration-records"/> &gt; User certificate
information.</p>
</chl3>
<chl3 xml:id="create_sem_machine_user_certificates"><title>Create SEM Machine User Certificates</title>
<p>Create access certificates for:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>EACH SEM instance needing access to ECAS. It is recommended to
create a certificate for each SEM instance.</p>
</list-item>
<list-item compact="no">
<p>SEM TEST user certificate</p>
</list-item>
</list>
<p>Follow the procedure described in <xref linkend="anchor-create-management-user"/>
, but use the following profiles:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p><emph type="medium">End Entity Profile</emph>: SEMUserEndentityProfile</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Certificate Profile</emph>: SEMCertificateProfile</p>
</list-item>
</list>
<p>Navigate to <emph type="medium">Create Keystore</emph>, use <emph type="medium">Key length</emph> at least 2048 bits,
enroll the SEM certificate and save the certificate file.</p>
<p>Creating an additional SEM certificate for testing (for example SEM-TEST)
is recommended. (There is no need to provide access rights for that
certificate, but can be useful for testing/ troubleshooting later on.)</p>
<note>
<p>Return to the Adminweb by clicking <emph type="medium">Miscellaneous</emph> →
<emph type="medium">Administration</emph> or select the original Adminweb tab in the browser.</p>
</note>
<p>Record information of all the users needed to
<xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">User certificate
information</resource-id>.</p>
<p>Take a note of the created Management and SEM users (if opted by the Card
Usage Record Policy) in <xref linkend="anchor-integration-records"/>
&gt; Mgmt OCS HSM cards record</p>
</chl3>
</chl2>
<chl2 xml:id="create_ssl_ca_under_management_token_protection_and_issue_ssl_certificates_for_all_fes"><title>Create SSL CA Under Management Token Protection and Issue SSL Certificates for All FEs</title>
<chl3 xml:id="configure_ecas_ssl_ca"><title>Configure ECAS SSL CA</title>
<p>Navigate to <emph type="medium">CA Functions</emph> → <emph type="medium">Certification Authorities</emph>, then select
<emph type="medium">EDIT</emph> for <emph type="medium">OPERATOR_ECAS_SSL_CA</emph>.</p>
<p>Give appropriate name for the SSL CA in the <emph type="medium">Subject DN</emph> field.</p>
<note>
<p>This cannot be changed after initializing the CA.</p>
</note>
<p>Click <emph type="medium">Save and Initialize</emph>.</p>
<p>Optionally, it is possible to rename the SSL CA (see <resource-id type="file-path">Manage Certificate
Authorites</resource-id> picture above).</p>
</chl3>
<chl3 xml:id="anchor-issue-ssl-certificates"><title>Create SSL Certificates</title>
<p>Create individual SSL certificate for each FE.</p>
<note>
<p>All the individual certificates can be created for both sites at this
stage in order to avoid the need for inserting Smartcards into HSM when
building the other site.</p>
</note>
<p>Navigate to <emph type="medium">RA Functions → Add End Entity</emph></p>
<p>Provide:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p><emph type="medium">End Entity Profile</emph> SSLprofile</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Username</emph> &lt;hostname&gt;</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Password</emph> &lt;use a strong one&gt;</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">CN</emph> hostname or FQDN like site-1-fe-1.customer.net</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">unstructuredName, Domain name (FQDN)</emph>, for example site-1-fe-1.customer.net</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Subject Alternative Name IP address fields</emph>:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Traffic (Application) Network IP of FE (if configured)</p>
</list-item>
<list-item compact="no">
<p>O&amp;M Network IP of FE</p>
</list-item>
</list>
</list-item>
</list>
<admonition type="danger">
<p>If using Load Balancer, enter also its VIP.</p>
</admonition>
<list type="unordered" compact="no">
<list-item compact="no">
<p><emph type="medium">Certificate Profile</emph> SSL Certificate Profile</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">CA</emph> ECAS SSL CA</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">Token</emph> JKS file</p>
</list-item>
</list>
<p>Navigate to <emph type="medium">Public web → Create keystore</emph></p>
<p>Provide the required info (use at least RSA 2048). Save each JKS file.</p>
<p><emph type="medium">REPEAT</emph> this procedure for each certificate needed.</p>
<p>Take a note of the issued SSL certificates to <xref linkend="anchor-integration-records"/>
&gt; Mgmt OCS HSM cards record.</p>
<p>Record SSL certificate information to <xref linkend="anchor-integration-records"/>
&gt; User certificate information.</p>
<p>List at least the usernames and serial numbers of the SSL certificates.
The serial number of the certificate can be viewed in <emph type="medium">RA Functions</emph> →
<emph type="medium">Search End Entities</emph> → <emph type="medium">Advanced Mode</emph> → CA Equals ECAS SSL CA
→ <emph type="medium">Search</emph> → <emph type="medium">View Certificates</emph> of each SSL user certificate.</p>
</chl3>
<chl3 xml:id="stop_management_ocs_preload"><title>Stop Management OCS Preload</title>
<p>Go back to the FE-OAM shell window, where Wildfly is running with the
preload and simply hit <emph type="medium">Ctrl+c</emph>.</p>
<p>Exit wildfly user and make sure Wildfly is stopped (grep for process), then use
<resource-id type="file-path">kill</resource-id> if needed.</p>
</chl3>
</chl2>
<chl2 xml:id="anchor-copy-mancasslcaocs-site2feoam"><title>Copy Management CA and SSL CA Keys Plus OCS Files to SITE-2-FE-OAM</title>
<note>
<p>It is not necessary to do SITE 2 configuration at this step.
This step can be done also when SITE 1 configuration has been finished,
in case getting to SITE 2 involves for example long travel.</p>
</note>
<step-list>
<sl-item>
<p>Copy both newly created keys (4 key-files) and OCS card files from
SITE-1-FE-OAM, <resource-id type="file-path">/opt/nfast/kmdata/local</resource-id> to the other site’s FE-OAM:</p>
<stepxmp condensed="yes">
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# tar cvfp /tmp/HSM_OAM_KEYS.tar key_* card*
# scp /tmp/HSM_OAM_KEYS.tar ecas@&lt;O&amp;M IP of SITE-2-FE-OAM&gt;:/tmp/
# exit</preform>
</stepxmp>
<p>In target SITE-2-FE-OAM node, extract files to the intended location and check
that the files have correct ownership.</p>
<stepxmp>
<preform>$ sudo -i
# tar xvfp /tmp/HSM_OAM_KEYS.tar -C /opt/nfast/kmdata/local/
# ls -ltr /opt/nfast/kmdata/local/
# exit</preform>
</stepxmp>
<note>
<p>Check that the copied keys are owned by wildfly user and nfast
group. If not correct, change the ownership:</p>
</note>
<stepxmp condensed="yes">
<preform>$ sudo chown wildfly:nfast /opt/nfast/kmdata/local/&lt;key_pkcs11_* file&gt;</preform>
</stepxmp>
<note>
<p>Check that the copied card files are owned by root user and nfast
group. If not correct, change the ownership:</p>
</note>
<stepxmp>
<preform>$ sudo chown root:nfast /opt/nfast/kmdata/local/card*</preform>
</stepxmp>
<p>Restart Wildfly:</p>
<stepxmp>
<preform>$ sudo service wildfly restart</preform>
</stepxmp>
</sl-item>
</step-list>
<p>If SITE 1 integration has already been finished, proceed with the next
substep in step <xref linkend="anchor-site2-config-steps"/>.</p>
</chl2>
<chl2 xml:id="make_restore_point_provide_access_to_new_admin_certificate_and_revoke_bootstrap_access"><title>Make Restore Point, Provide Access to New Admin Certificate and Revoke Bootstrap Access</title>
<chl3 xml:id="make_restore_point"><title>Make Restore Point</title>
<p>Backup the installation. Login to site-1-cnf and perform:</p>
<example condensed="yes" indent="column">
<preform>$ ansible-playbook /etc/ansible/site-configuration/backup.yml</preform>
</example>
<note>
<p>If the configuration backup fails (for example in permission errors),
reboot the CNF VM and re-run <resource-id type="file-path">backup.yml</resource-id>.</p>
</note>
<p>Backup the database. Login to site-1-db-1 and perform:</p>
<example condensed="yes" indent="column">
<preform>$ sudo ecas database backup</preform>
</example>
<note>
<p>The backup script internally will use the VIP address of the DB in site
to connect to the database.</p>
</note>
<p>Start Wildfly applicaton server. Login to site-1-fe-oam and perform:</p>
<example condensed="yes" indent="column">
<preform>$ sudo service wildfly start</preform>
</example>
<note>
<p>If something goes wrong in the next steps and access to all system interfaces
will be lost, please restore from backup and try again.
Refer to the <ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Data Backup and Restore Guide" xlink:title="Data Backup and Restore Guide">Data Backup and Restore Guide</ulink> and the
<ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Troubleshooting Guide" xlink:title="Troubleshooting Guide">Troubleshooting Guide</ulink> for more information.</p>
</note>
</chl3>
<chl3 xml:id="anchor-provide-access-manCAusers"><title>Provide Access to Newly Created Management CA Users</title>
<p>First, import the new management certificate (ECASadmin.p12, or
whichever name you chose for the file) to the web browser that you are
using, as you earlier imported the bootstrap <resource-id type="file-path">superadmin.p12</resource-id>.</p>
<p>Then, search the new ECASadmin (or whichever name you chose for the
admin user) certificate from <emph type="medium">RA-Functions</emph> → <emph type="medium">Search End Entities</emph>,
enter <emph type="medium">Advanced Mode</emph> and select <emph type="medium">CA</emph> Equals <emph type="medium">OPERATOR_ECAS_MANAGEMENT_CA</emph>
(or the renamed one) as search criteria, click Search. Select <emph type="medium">ECASadmin</emph>
(or your defined superadmin user name) and click <emph type="medium">View Certificates</emph>.</p>
<p>Copy the ECASadmin <emph type="medium">Certificate Serial Number</emph> to clipboard.</p>
<p>Navigate to <emph type="medium">System Functions</emph> → <emph type="medium">Administrator Roles</emph>, on the right of <emph type="medium">Super
Administrator Role</emph> click <emph type="medium">Administrators</emph>.</p>
<p>Add the new role to the new superadmin, make sure to:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>choose the new Management CA (default name: OPERATOR_ECAS_MANAGEMENT_CA)
in the <emph type="medium">CA</emph> field</p>
</list-item>
<list-item compact="no">
<p>add the new certificate serial in the <emph type="medium">Match value</emph> field</p>
</list-item>
</list>
<p>If you have created more than one Management CA administrator account,
add the serial numbers of all those accounts.</p>
</chl3>
<chl3 xml:id="provide_access_for_sem_machine_accounts"><title>Provide Access for SEM Machine Accounts</title>
<p>See details in <xref linkend="anchor-provide-access-manCAusers"/>.</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Fetch the SEM Machine Account Serial Number (<emph type="medium">RA Functions</emph> →
<emph type="medium">Search End Entities</emph> → enter <emph type="medium">Advanced Mode</emph> and select <emph type="medium">CA</emph>
Equals <emph type="medium">OPERATOR_ECAS_MANAGEMENT_CA</emph> (or the renamed one) as search
criteria, click <emph type="medium">Search</emph>. Find created SEM account username →
<emph type="medium">View Certificates</emph>)</p>
</list-item>
<list-item compact="no">
<p>Add the serial to the SEM Machine account role (<emph type="medium">System Functions</emph>
→ <emph type="medium">Administrator Roles</emph> → <emph type="medium">SEM Machine User Account Role</emph> →
<emph type="medium">Administrators</emph> → <emph type="medium">CA</emph> equals <emph type="medium">OPERATOR_ECAS_MANAGEMENT_CA</emph> (or the renamed
one) ; then add the serial number.</p>
</list-item>
</list>
</chl3>
<chl3 xml:id="anchor-install-keystoretruststore-feoam"><title>Upload and Install New Keystore and Truststore to FE-OAM</title>
<p><emph type="medium">Truststore</emph>:</p>
<p>ECAS can fetch the truststore with built-in CLI tool, as long as the CLI has
not been disabled from the GUI.
See <emph type="medium">System Configuration</emph> → <emph type="medium">Command Line Interface</emph> →
<emph type="medium">Enable Command Line Interface Access</emph> and <emph type="medium">Enable Command Line
Interface Default User</emph></p>
<p>Run the ecas truststore update command, and choose appropriate CA (Management CA
in the sample).</p>
<note>
<p>If the CLI has been disabled, the Truststore must be downloaded
first to a file (navigate to <emph type="medium">CA Functions</emph> → <emph type="medium">CA Structure and CRLs</emph> →
<emph type="medium">Management CA</emph> → <emph type="medium">Download JKS file</emph>)</p>
</note>
<p>Login to site-1-fe-oam and perform the following to choose the operator
specific Management CA Truststore. Enter a strong password.</p>
<admonition type="danger">
<p>This password must be the same for all FEs.</p>
</admonition>
<note>
<p>The <emph type="medium">Available CAs</emph> sample list shown below depends on the use case
of ECAS (for example, subCAs may not exist), and the name of the Management
CA should be the same as given in earlier steps (if renamed).
If the list is not shown, restart wildfly service on the FE.</p>
</note>
<note>
<p>If the certificate details and the prompt to trust the
certificate is not displayed, restart wildfly service on the FE and
re-run the command.</p>
</note>
<example condensed="yes" indent="column">
<preform>$ sudo ecas truststore update
Fetching all available CAs from ECAS ...
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
--
Available CAs
1) BootstrapCA                  6) OPERATOR_issuing_subCA_2018
2) OPERATOR_ECAS_MANAGEMENT_CA  7) OPERATOR_issuing_subCA_2019
3) OPERATOR_rootCA              8) OPERATOR_issuing_subCA_2020
4) OPERATOR_ECAS_SSL_CA         9) OPERATOR_issuing_subCA_2021
5) OPERATOR_issuing_subCA_2017
Select CA to use for Truststore: 2
Enter password for the new Truststore:
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Owner: CN=OPERATOR_ECAS_MANAGEMENT_CA
Issuer: CN=OPERATOR_ECAS_MANAGEMENT_CA
Serial number: 637cbc94d2382f58
Valid from: Mon Jan 30 09:12:28 EET 2017 until: Thu Jan 30 09:12:28 EET 2042
Certificate fingerprints:
         MD5:  21:0A:D3:ED:CC:D8:89:D0:38:DA:F7:DC:11:93:3F:69
         SHA1: 44:BA:E6:1F:DB:22:15:47:E7:AD:96:67:3E:E5:0A:C2:3C:15:AB:3F
         SHA256: 08:C5:87:25:64:68:4A:77:96:B8:00:C8:21:AB:E0:7A:EE:C8:39:4F:C7:D8:BD:3F:
         0B:D7:78:12:72:01:4B:CF
         Signature algorithm name: SHA256withRSA
         Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: 3A EF 06 38 84 A8 54 95   1F 6A 4D EB 87 40 E5 6D  :..8..T..jM..@.m
0010: ED 38 18 45                                        .8.E
]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  DigitalSignature
  Key_CertSign
  Crl_Sign
]

#4: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: 3A EF 06 38 84 A8 54 95   1F 6A 4D EB 87 40 E5 6D  :..8..T..jM..@.m
0010: ED 38 18 45                                        .8.E
]
]

Trust this certificate? [no]:  yes
Certificate was added to keystore
Updating adminweb truststore password</preform>
</example>
<p>Record the username for this Management CA Truststore in <xref linkend="anchor-integration-records"/>
&gt; User certificate information.</p>
<p><emph type="medium">Keystore</emph>:</p>
<p>To upload the new keystore (SSL Certificate) for the FE-OAM (created in
earlier steps), transfer this new keystore file (FE-OAM SSL certificate)
to <resource-id type="file-path">/home/ecas</resource-id> as ecas user and move it to <resource-id type="file-path">/opt/ecas/cert/</resource-id>.</p>
<p>For example:</p>
<example condensed="yes" indent="column">
<preform>$ sudo mv site-1-fe-oam.jks /opt/ecas/cert/</preform>
</example>
<p>and run the following command as root user:</p>
<note>
<p>Do NOT select the <resource-id type="file-path">cacert</resource-id> certificate here as that it the default one,
not the customer and node specific one.</p>
</note>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# ecas keystore -br replace /opt/ecas/cert/site-1-fe-oam.jks
Fetching certificate aliases from /opt/ecas/cert/site-1-fe-oam.jks...
Enter keystore password:
 -----
Available certificate aliases:
1) site-1-fe-oam.lab.fi.eu.ericsson.se
2) cacert
Select certificate alias to use: 1
Backup file: /opt/ecas/backup/keystore.jks.bkp_20170213-152341
Taking a snapshot of Wildfly standalone.xml
    "outcome" =&gt; "success",
    "result" =&gt; "/opt/wildfly/standalone/configuration/standalone_xml_history/snapshot/20170213-152343323standalone.xml"
Updating keystore
{
    "outcome" =&gt; "success",
    "response-headers" =&gt; {
        "operation-requires-reload" =&gt; true,
        "process-state" =&gt; "reload-required"
    }
}
{
    "outcome" =&gt; "success",
    "response-headers" =&gt; {
        "operation-requires-reload" =&gt; true,
        "process-state" =&gt; "reload-required"
    }
}
{
    "outcome" =&gt; "success",
    "result" =&gt; undefined
}
Restart Application Server
# exit</preform>
</example>
<p>In this command:</p>
<p>-b = snapshot config, backup original keystore</p>
<p>-r = restart Wildfly, for both changes to take effect</p>
<p>Provide the password for the keystore when asked.</p>
<note>
<p>The order of truststore and keystore updates is not relevant but you
need to use the -r option to restart Wildfly after making both of these changes.</p>
</note>
<p>Restart web browser (all instances), and test access to the SITE-1-FE-OAM
<emph type="medium">with the new certificate</emph>.</p>
<p>The new ECAS administrator certificate issued by Management CA should
be selectable when logging into EJBCA™ adminweb.</p>
<p>Add Exception and Confirm the Security Exception.</p>
</chl3>
<chl3 xml:id="remove_default_admin_certificate"><title>Remove Default Admin Certificate</title>
<p>If SITE 1 integration has already been finished, proceed with the next
substep in <xref linkend="anchor-site2-config-steps"/>.</p>
<p>Once successfully logged in with the new admin certificate, navigate to
<emph type="medium">System Functions</emph> → <emph type="medium">Administrator Roles</emph>, open <emph type="medium">Super Administrator
Roles</emph> → <emph type="medium">Administrators</emph>, and delete the bootstrap access by selecting
<emph type="medium">Delete</emph> for the BootstrapCA line.</p>
<note>
<p>Make sure that you have logged in with <emph type="medium">your new administrator
certificate</emph> (Do NOT log in with the certificate issued from the BootstrapCA,
as you are about to revoke access from the bootstrap certificate).
Remove access from the temporary admin (provided by BootstrapCA):</p>
</note>
<p>To ensure that BootstrapCA is no longer used, revoke it:</p>
<p>Navigate to <emph type="medium">Certification Authorities</emph> → <emph type="medium">BootstrapCA</emph> → <emph type="medium">Edit CA</emph></p>
<p>Scroll down to <emph type="medium">CA lifecycle</emph>, and <emph type="medium">Revoke</emph> button:</p>
<p>Click <emph type="medium">Revoke</emph>. The CA will be revoked, and all bootstrap access certificates
alike. You can use the reason <emph type="medium">Unspecified</emph>.</p>
</chl3>
<chl3 xml:id="checkpoint"><title>Checkpoint</title>
<p>You have now configured and applied new authentication schema for ECAS
interface. After this, there is no access to the system with the default
certificates, and new certificates can only be granted, when the OCS
protected keys are preloaded to the HSM.</p>
<p>On ECAS:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>New Keystore = New SSL cert, corresponding to right FQDN/IP</p>
</list-item>
<list-item compact="no">
<p>New Truststore = User (SEM, human) authentication root of trust</p>
</list-item>
</list>
<p>If you can access interfaces with the new certificates and not with the
old ones, the configuration is done correctly (Certificates may, however,
contain inconsistent parameters, as spelling mistakes in FQDN, wrong key
lengths, and so on).</p>
</chl3>
<chl3 xml:id="anchor-install-keystoretruststore-allfes"><title>Upload and Install New Keystore and Truststore to ALL FEs</title>
<note>
<p>Before updating the truststore, if you have changed the default
<emph type="medium">Management CA</emph> name (&lt;OPERATOR_ECAS_MANAGEMENT_CA&gt;) to something else, you
must restart the wildfly service in the FE to take the name change into use.</p>
</note>
<p>See <xref linkend="anchor-install-keystoretruststore-feoam"/>
for details.</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Instead of the FE-OAM, install new truststore to each of the other FEs in
the system (no need for file upload). When running the ecas truststore update
command, make sure you see the correct CA name in the list of Available CAs.
You MUST use the same password as given for the FE-OAM truststore file.</p>
</list-item>
<list-item compact="no">
<p>If the truststore update and/or keystore replace commands do not
show the correct expected output, restart wildfly service on the FE
and re-run the command which fails.</p>
</list-item>
</list>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Transfer new corresponding keystore file (.jks) to each of the other FEs
(created in <xref linkend="anchor-issue-ssl-certificates"/>)
to <resource-id type="file-path">/home/ecas</resource-id> as ecas user and move it to <resource-id type="file-path">/opt/ecas/cert/</resource-id>. Make sure
that each site specific and node specific keystore file is transferred
only to the intended FE.</p>
</list-item>
<list-item compact="no">
<p>Install new SSL certificate (keystore) to every other FE in the system (need
to upload corresponding .jks file to the FE)</p>
</list-item>
<list-item compact="no">
<p>Test with the new admin certificate, that every FE is accessible. Confirm
the Security Exceptions in the browser.</p>
</list-item>
</list>
<p>After executing this step when configuring SITE 2 after SITE 1 has
already been finished, continue with <xref linkend="anchor-site2-config-steps"/>.</p>
</chl3>
</chl2>
<chl2 xml:id="create_ca_hierarchy_for_wifi_calling_solution_users"><title>Create CA Hierarchy for WiFi Calling Solution Users</title>
<chl3 xml:id="check_logging_status_on_fe_rca"><title>Check Logging Status on FE-RCA</title>
<admonition type="danger">
<p><emph type="medium">Run these steps on the FE-RCA</emph>. The Root key material is
stored on that VM (only), in encrypted format, and should not be
distributed to other VMs. The subCA key material must be distributed to
traffic FEs.</p>
</admonition>
<p>By default, the ECAS FE starts with logging enabled. Check the status
from ECAS FE using:</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# /usr/local/sbin/ecas audit state
# exit</preform>
</example>
<p>Check that the EJBCA™ Audit logging is enabled.</p>
<p>If not enabled, run:</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# /usr/local/sbin/ecas audit -br enable
# exit</preform>
</example>
</chl3>
<chl3 xml:id="preload_root_ca_ocs_in_fe_rca"><title>Preload Root CA OCS in FE-RCA</title>
<p>First, stop Wildfly:</p>
<example condensed="yes" indent="column">
<preform>$ sudo service wildfly stop</preform>
</example>
<p>Then start wildfly service with the preload:</p>
<example condensed="yes" indent="column">
<preform>$ sudo su wildfly
$ /opt/nfast/bin/preload -c Root -m 1 /opt/wildfly/bin/standalone.sh</preform>
</example>
<note>
<p>The above command loads the Root OCS to HSM #1 (defined with
parameter <resource-id type="file-path">m [ unit # ]</resource-id>), cards need to be inserted only to that module.</p>
</note>
<p>Insert cards as requested.</p>
<p><preform>Loading cardsets:
Root on modules 1

Loading `Root':
Checking modules and reading cards ...
...
...
Card reading complete.

Stored Cardset: Root (4261...) on module #1
Executing /opt/wildfly/bin/standalone.sh
=========================================================================

  JBoss Bootstrap Environment

  JBOSS_HOME: /opt/wildfly

  JAVA: java

  JAVA_OPTS:  -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M
  -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
  -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true

=========================================================================</preform></p>
<note>
<p>Do NOT exit from the command, leave console open (there will be
active logging on the screen).</p>
</note>
</chl3>
<chl3 xml:id="anchor-generate-root-cakeys"><title>Generate Root CA Keys</title>
<p>Login to the EJBCA™ admin GUI in the FE-RCA. Navigate to
<emph type="medium">CA Functions</emph> → <emph type="medium">Crypto Tokens</emph> → <emph type="medium">OPERATOR_RootCAtoken</emph></p>
<p>You may change the default name of the RootCAtoken by switching to edit
mode and change the name according to preferences and click <emph type="medium">Save</emph>.</p>
<p>Go back to Crypto Token overview and Click <emph type="medium">Activate</emph>.</p>
<note>
<p>The activation code must be left empty.</p>
</note>
<p>After activation, click the <emph type="medium">OPERATOR_RootCAtoken</emph> (or the changed token
name). On the bottom box, replace signKey with rootKey, keep the
RSA 4096 and click <emph type="medium">Generate new key pair</emph>:</p>
<figure align="left" float="no" indent="column">
<graphics xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="rootKey.png" xlink:show="embed" xlink:actuate="onLoad" scalefit="1"/>
<caption/>
</figure>
<p>Open another terminal session to FE-RCA and check that new rootCA keys
are created:</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# ls -ltr
total 56
-rw-r----- 1 nfast   nfast 19764 Nov 13 09:31 world
-rw-r--r-- 1 nfast   nfast   860 Nov 13 09:31 module_F43C-E495-FBE4
-rw-r--r-- 1 nfast   nfast   860 Nov 13 09:31 module_35AD-F61C-7CAC
-rw-r--r-- 1 root    nfast   116 Nov 13 15:31
 card_765f1e25f65857888a880d7f26cad5d0b4ac920c_1
-rw-r--r-- 1 root    nfast   108 Nov 13 15:33
 cards_765f1e25f65857888a880d7f26cad5d0b4ac920c
-rw-r--r-- 1 root    nfast   116 Nov 13 15:33
 card_765f1e25f65857888a880d7f26cad5d0b4ac920c_2
-rw-rw-r-- 1 wildfly nfast  8728 Nov 19 12:53
 key_pkcs11_uc765f1e25f65857888a880d7f26cad5d0b4ac920c-
40be8e2d80f0d7341f1c7aa1f6262aadbb1a6d0f
-rw-rw-r-- 1 wildfly nfast  4068 Nov 19 12:53
 key_pkcs11_um765f1e25f65857888a880d7f26cad5d0b4ac920c-
3929fb0d3f2c79dee46be6b0389bc9bb0226a2dc
# exit</preform>
</example>
<p>Take notes of these files into
<xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">Which files are mapped to
which management keys</resource-id> &gt; <resource-id type="file-path">For RootCA OCS</resource-id>.</p>
</chl3>
<chl3 xml:id="activate_subca_token_and_generate_subca_keys"><title>Activate subCA Token and Generate subCA Keys</title>
<p>Navigate to <emph type="medium">CA Functions</emph> → <emph type="medium">Crypto Tokens</emph> → <emph type="medium">Operator_subCAtoken</emph></p>
<p>Click <emph type="medium">Activate</emph>.</p>
<p>Click <emph type="medium">OperatorsubCAtoken</emph>.</p>
<p>Click <emph type="medium">Switch to edit mode</emph>.</p>
<p>The same way as for the RootCAtoken, you may change here the default
name of the <emph type="medium">OPERATOR_subCAtoken</emph> by switching to edit mode and change
the name according to preferences.</p>
<p>Make the subCA token auto-activating:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Check the <emph type="medium">Auto-activation</emph> to use.</p>
</list-item>
<list-item compact="no">
<p>Give a bogus authentication code (same code twice) - this will be
ignored, but must not be left empty.</p>
</list-item>
<list-item compact="no">
<p>Click <emph type="medium">Save</emph>.</p>
</list-item>
</list>
<p>Then, generate the keys for the subCAs by clicking the <emph type="medium">Generate</emph> button for
each subCA one by one.</p>
<admonition type="danger">
<p>Record the key filenames of each subCA key generation individually.
That is, after each subCA key generation, record the created key filenames. If
this is not done properly, it is impossible to separate the key filenames
from each other (which is created by which subCA key generation), which
would make the future proper PKI maintenance activities impossible.</p>
</admonition>
<p>List the following directory on the FE-RCA, using the command below
after each key generation to record the created filenames:</p>
<example condensed="yes" indent="column">
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# ls -ltr
total 116
-rw-r----- 1 nfast   nfast 19764 Nov 13 09:31 world
-rw-r--r-- 1 nfast   nfast   860 Nov 13 09:31 module_F43C-E495-FBE4
-rw-r--r-- 1 nfast   nfast   860 Nov 13 09:31 module_35AD-F61C-7CAC
-rw-r--r-- 1 root    nfast   116 Nov 13 15:31
card_765f1e25f65857888a880d7f26cad5d0b4ac920c_1
-rw-r--r-- 1 root    nfast   108 Nov 13 15:33
cards_765f1e25f65857888a880d7f26cad5d0b4ac920c
-rw-r--r-- 1 root    nfast   116 Nov 13 15:33
card_765f1e25f65857888a880d7f26cad5d0b4ac920c_2
-rw-rw-r-- 1 wildfly nfast  8728 Nov 19 12:53
key_pkcs11_uc765f1e25f65857888a880d7f26cad5d0b4ac920c-
40be8e2d80f0d7341f1c7aa1f6262aadbb1a6d0f
-rw-rw-r-- 1 wildfly nfast  4068 Nov 19 12:53
key_pkcs11_um765f1e25f65857888a880d7f26cad5d0b4ac920c-
3929fb0d3f2c79dee46be6b0389bc9bb0226a2dc
-rw-rw-r-- 1 wildfly nfast  6720 Nov 19 14:38
key_pkcs11_ua63122f09e54a8a28e2f88e24fb4a15326220f6b1
-rw-rw-r-- 1 wildfly nfast  3048 Nov 19 14:38
key_pkcs11_uae015d4be08a3247e5d0cd966a55ef2c8e0dae069
# exit</preform>
</example>
<p>Take notes of each key file generation into <xref linkend="anchor-integration-records"/>
 &gt; Which files are mapped to which management keys &gt; For Root SubCA keys.</p>
</chl3>
<chl3 xml:id="initialize_operator_rootca"><title>Initialize OPERATOR RootCA</title>
<p>Navigate to <emph type="medium">CA Functions</emph> → <emph type="medium">Certification Authorities</emph>, choose
<emph type="medium">OPERATOR_Root_CA</emph>, and click <emph type="medium">edit CA</emph>.</p>
<p>Give appropriate name for the operator root CA (edit Subject DN):</p>
<note>
<p>This CANNOT be changed later, and will potentially be visible to
end users.</p>
</note>
<p>Click <emph type="medium">Save and Initialize</emph>.</p>
<p>Optionally, the ECAS internal name for the operator root CA can be
changed to the appropriate one. This one will not show outside ECAS. To
rename the CA, navigate to <emph type="medium">Certification Authorities</emph>, choose the CA, give
a new name on the bottom of the page, and click <emph type="medium">Rename</emph>.</p>
<admonition type="danger">
<p>If changing the rootCA name here, you will need to ensure for
each subCA that the signing CA is the root CA, and not self-signed (see
next section).</p>
</admonition>
<p>Takes notes of the created RootCA (if opted by the policy) into
<xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">Root OCS HSM cards record</resource-id>.</p>
</chl3>
<chl3 xml:id="initialize_operator_subcas"><title>Initialize OPERATOR SubCAs</title>
<p>Similarly to initializing the rootCA, perform the following for the subCAs by
navigating to <emph type="medium">CA Functions</emph> → <emph type="medium">Certification Authorities</emph>, choose
<emph type="medium">OPERATOR_issuing_subCA_&lt;year&gt;</emph>, and click <emph type="medium">edit CA</emph>.</p>
<p>For each subCA:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Edit the subject DN.</p>
<note>
<p>This may be easily visible to the end user, and cannot be
changed after this point.</p>
</note>
</list-item>
<list-item compact="no">
<p>Ensure that the subCA is signed by the Operator root CA in the field
<emph type="medium">Signed By</emph> under <emph type="medium">CA certificate data</emph></p>
</list-item>
<list-item compact="no">
<p>Check the certificate Profile <emph type="medium">NSDSsubCAprofile</emph></p>
</list-item>
<list-item compact="no">
<p>Check the end of validity date (recommendation: 1 year after the
planned decommissioning, for example subCA2016, until end of 2017)</p>
</list-item>
<list-item compact="no">
<p>To finish each subCA, click <emph type="medium">Save and Initialize</emph>.</p>
</list-item>
</list>
<p>Take notes of the created subCAs into
<xref linkend="anchor-integration-records"/> &gt; <resource-id type="file-path">Root OCS HSM cards record</resource-id>.</p>
<p>Optionally, the name of the CA can be changed in the ECAS GUI. This will
not show up to the end user, however. To rename the CA, navigate to
<emph type="medium">Certification Authorities</emph>, choose the CA, give new name on the bottom of
the page, and click <emph type="medium">Rename</emph>.</p>
<p>After the full procedure, the CAs should appear active.</p>
</chl3>
<chl3 xml:id="unload_rootca_ocs"><title>Unload RootCA OCS</title>
<p>To stop the OCS preload, simply go to the terminal, where Wildfly was
started with preloaded, and hit <emph type="medium">ctrl-c</emph>. Exit wildfly user.</p>
<p>Start Wildfly normally on FE-RCA:</p>
<example condensed="yes" indent="column">
<preform>$ sudo service wildfly start</preform>
</example>
</chl3>
</chl2>
<chl2 xml:id="configure_other_fes"><title>Configure Other FEs</title>
<chl3 xml:id="anchor-config-site12-trafficfes"><title>Configure 1st and 2nd Site Traffic FEs</title>
<note>
<p>Perform all these steps to all traffic FEs.
The subCA keys must be copied to all serving traffic FEs (in both sites,
that is, site-1-fe-1, site-2-fe-2).
The subCA keys must be copied also to  FE-OAM (all FEs), in case the
health check for the subCA is enabled from any FE, since it is a global
setting. Health check enabling is recommended for the issuing subCAs.</p>
</note>
<p>It is not necessary to do SITE 2 configuration at this step. This step
can be done for SITE 2 also when SITE 1 configuration has been finished.
See <xref linkend="anchor-site2-config-steps"/>.</p>
<p><xref linkend="anchor-integration-records"/>.</p>
<step-list>
<sl-item>
<p>Tar the key files for subCAs on FE-RCA and copy them to all traffic
FEs and FE-OAM:</p>
<stepxmp>
<preform>$ sudo -i
# cd /opt/nfast/kmdata/local
# tar cvfp /tmp/subCA.tar \
&lt;list of subCA key files starting with key_pkcs11_...&gt;

# scp /tmp/subCA.tar ecas@&lt;O&amp;M IP of FE&gt;:/tmp/
# exit</preform>
</stepxmp>
<note>
<p>Exclude from the tar file the root CA key files (2 key files).
This ensures that the traffic FEs and the FE-OAM cannot function as
rootCA. These rootCA key files have longer filename with hyphen (-)
character in between. See <xref linkend="anchor-generate-root-cakeys"/>.</p>
</note>
</sl-item>
<sl-item>
<p>Login to each traffic FE and FE-OAM, untar the transferred files to
intended location and check that the files have correct file ownership.</p>
<stepxmp>
<preform>$ sudo -i
# tar xvfp /tmp/subCA.tar -C /opt/nfast/kmdata/local/
# ls -ltr /opt/nfast/kmdata/local/
# exit</preform>
</stepxmp>
<note>
<p>Check that copied keys are owned by wildfly user and nfast group.
If not correct, change the ownership:</p>
</note>
<stepxmp condensed="yes">
<preform>$ sudo chown wildfly:nfast /opt/nfast/kmdata/local/&lt;key_pkcs11_* file&gt;</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>DISABLE logging on traffic FEs only (not FE-OAM nor FE-RCA):</p>
<stepxmp>
<preform>$ sudo -i
# /usr/local/sbin/ecas audit -br disable
Backup file: /opt/ecas/backup/\
cesecore.properties.bkp_20151123-102306
EJBCA audit logging for this FE disabled
Restart Application Server
# exit</preform>
</stepxmp>
</sl-item>
</step-list>
<p>If SITE 1 integration has already been finished, proceed with the next
substep in <xref linkend="anchor-site2-config-steps"/>.</p>
</chl3>
</chl2>
<chl2 xml:id="verify_functionality_and_configuration"><title>Verify Functionality and Configuration</title>
<chl3 xml:id="verify_that_sem_facing_traffic_subcas_work"><title>Verify that SEM-facing Traffic SubCAs Work</title>
<p>Login to each FE with the new admin certificate from your browser.
Navigate to Crypto Tokens, and check that the subCA crypto token
exists, and is active.</p>
<p>Click the subCA crypto token, and test that all keys work
(click <emph type="medium">Test</emph>).</p>
<p>If this test fails, try restarting the application server on the
corresponding FE to clear all cached settings:</p>
<example condensed="yes" indent="column">
<preform>$ sudo service wildfly restart</preform>
</example>
</chl3>
<chl3 xml:id="anchor-site2-config-steps"><title>SITE 2 Configuration Steps (if not done during SITE 1 configuration)</title>
<p>If SITE 2 is not configured at the same time as SITE 1 configuration,
the following steps must be executed on SITE 2 nodes:</p>
<step-list>
<sl-item>
<p>Perform steps in <xref linkend="anchor-configure-2ndsite-rfshsms"/>.</p>
</sl-item>
<sl-item>
<p>Perform steps in <xref linkend="anchor-copy-mancasslcaocs-site2feoam"/>.</p>
</sl-item>
<sl-item>
<p>Perform steps in <xref linkend="anchor-config-site12-trafficfes"/>
(Only the 2nd site traffic FEs).</p>
</sl-item>
<sl-item>
<p>Perform steps in <xref linkend="anchor-install-keystoretruststore-feoam"/>.</p>
</sl-item>
<sl-item>
<p>Perform steps in <xref linkend="anchor-install-keystoretruststore-allfes"/>.</p>
</sl-item>
</step-list>
</chl3>
<chl3 xml:id="shut_down_fe_rca_and_backup"><title>Shut Down FE-RCA and Backup</title>
<p>Shut down the FE-RCA and make a backup of the VM. It will not be
needed until next time issuing subCAs. Keep the VM and backup
securely. If there is a copy of the root CA on the other site, copy
the OCS files, root CA and sub CA keys to that one. That is, all other
files, except world and module_* from <resource-id type="file-path">/opt/nfast/kmdata/local</resource-id>.</p>
</chl3>
<chl3 xml:id="check_cli_access_status"><title>Check CLI Access Status</title>
<p>Login to the EJBCA™ Adminweb in FE-OAM (on either site) with the Management
administrator certificate, Navigate to <emph type="medium">System Configuration</emph> → <emph type="medium">System Configuration</emph></p>
<p>Scroll down to check the status of <emph type="medium">Enable Command Line Interface
Default User</emph>.</p>
<note>
<p>This user has auto-generated internal password, and enables full
access to the CA through the root shell within the ECAS FE.</p>
</note>
<p>Depending on the environment, this may be disabled, for example to limit
what the Linux system admins can perform on the system. However, the
critical keys are protected with HSMs (root keys with OCS cards), thus
the CLI will not allow access to those CAs. Also, in troubleshooting
situations the CLI may turn out to be very useful.</p>
</chl3>
<chl3 xml:id="enable_alarms"><title>Enable Alarms</title>
<p>The alarms are disabled by default.
It is possible to enable alarms either during initial site
configuration or at a later point in time.</p>
<p>For the full instructions on how to activate/deactivate alarms at any
point in time, refer to the <ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Alarm Management Guide" xlink:title="Alarm Management Guide">Alarm Management Guide</ulink>.</p>
<p>To check the status of the alarms service in each VM, run the command:</p>
<example condensed="yes" indent="column">
<preform>$ systemctl is-active ecas-alarms
   active</preform>
</example>
</chl3>
</chl2>
<chl2 xml:id="make_restore_point_verify_sem_access"><title>Make Restore Point, Verify SEM Access</title>
<chl3 xml:id="make_restore_point_2"><title>Make Restore Point</title>
<p>Backup the installation. Login to site-1-cnf and perform:</p>
<example condensed="yes" indent="column">
<preform>$ ansible-playbook /etc/ansible/site-configuration/backup.yml</preform>
</example>
<note>
<p>If the configuration backup fails (for example in permission errors),
reboot the CNF VM and re-run <resource-id type="file-path">backup.yml</resource-id>.</p>
</note>
<p>Backup the database. Login to site-1-db-1 and perform:</p>
<example condensed="yes" indent="column">
<preform>$ sudo ecas database backup</preform>
</example>
<note>
<p>The backup script internally will use the VIP address of the DB in site
to connect to the database.</p>
</note>
<note>
<p>If something goes wrong in the next steps and access to all system interfaces
will be lost, please restore from backup and try again.
Refer to the <ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Data Backup and Restore Guide" xlink:title="Data Backup and Restore Guide">Data Backup and Restore Guide</ulink> and the
<ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Troubleshooting Guide" xlink:title="Troubleshooting Guide">Troubleshooting Guide</ulink> for more information.</p>
</note>
</chl3>
<chl3 xml:id="test_if_sem_certificate_works"><title>Test If SEM Certificate Works</title>
<p>High level manual procedure to test SEM certificate issuance:</p>
<step-list>
<sl-item>
<p>Install one of the SEM certificates to your browser (for example the
test Certificate; ensure first though, that it is listed in the SEM
user Administrators under Administrator Roles; restart all browser
instances)</p>
</sl-item>
<sl-item>
<p>Login to ECAS admin: <ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="https://&lt;FE-OAM_MGMT_IP&gt;:18443/ejbca/adminweb" xlink:title="https://&lt;FE-OAM_MGMT_IP&gt;:18443/ejbca/adminweb">https://&lt;FE-OAM_MGMT_IP&gt;:18443/ejbca/adminweb</ulink> using
the SEM certificate.</p>
</sl-item>
<sl-item>
<p>Navigate to <emph type="medium">Add End Entity</emph></p>
</sl-item>
<sl-item>
<p>Choose:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>NSDSendEntityProfile</p>
</list-item>
<list-item compact="no">
<p>username (for testing) + password</p>
</list-item>
<list-item compact="no">
<p>CN</p>
</list-item>
<list-item compact="no">
<p>valid CA (for example subCA2016)</p>
</list-item>
<list-item compact="no">
<p>P12 file for Token</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>Click <emph type="medium">Add</emph>.</p>
</sl-item>
<sl-item>
<p>Navigate to <emph type="medium">Public Web</emph></p>
</sl-item>
<sl-item>
<p>Choose <emph type="medium">Create keystore</emph></p>
</sl-item>
<sl-item>
<p>Give the username &amp; password you previously defined</p>
</sl-item>
<sl-item>
<p>Download the certificate</p>
</sl-item>
<sl-item>
<p>If using SEM-test certificate, remove access from it through
removing the serial number from SEM machine accounts Administrators
list under Administrator roles. You may keep the SEM test
certificate until the Acceptance Tests have been made.</p>
</sl-item>
</step-list>
<p>If this works, then it should work for SEM as well.</p>
</chl3>
<chl3 xml:id="backup_created_certificate_files"><title>Backup Created Certificate Files</title>
<p>Backup all created certificate files (.p12 and .jks files) to a safe and
secure location.
Refer to <xref linkend="anchor-integration-records"/>
&gt; <resource-id type="file-path">The following items should be backed up for maintainability and operation
purposes</resource-id>.</p>
</chl3>
</chl2>
<chl2 xml:id="configure_sem_and_aaa"><title>Configure SEM and AAA</title>
<chl3 xml:id="configure_sems"><title>Configure SEMs</title>
<note>
<p>SEM support may be needed to be consulted.
Before you start configuring the SEM, make sure you have:</p>
</note>
<step-list>
<sl-item>
<p><emph type="medium">Access</emph> with ssh/scp and browser to the SEM</p>
</sl-item>
<sl-item>
<p><emph type="medium">Certificate</emph> you created for SEM user (p12 format)</p>
</sl-item>
<sl-item>
<p><emph type="medium">SSL CA</emph> Certificate (ECASSSLCA.cacert.jks, see procedure below)</p>
</sl-item>
<sl-item>
<p><emph type="medium">End Entity Profile Name</emph> (in examples: NSDSendentityProfile)</p>
</sl-item>
<sl-item>
<p><emph type="medium">Certificate Profile Name</emph> (in examples: NSDSendentityCertificateProfile)</p>
</sl-item>
<sl-item>
<p><emph type="medium">Provisioning url</emph> (ejbca/ejbcaws/ejbcaws?wsdl)</p>
</sl-item>
<sl-item>
<p><emph type="medium">Issuer name</emph> (issuing CA name) (in examples: CN=NS_subCA_2016_17)</p>
</sl-item>
</step-list>
<p>To download the SSL CA Certificate in #2: on ECAS admin interface,
navigate to CA and CRL structure; download the CA certificate file
(you must have SSL certificate installed for ECAS from this CA).</p>
<p>Navigate to <emph type="medium">CA Structure &amp; CRLs</emph>.</p>
<p>For the SEM part, you need to find the correct IP and get the login
to the Ericsson Multi Activation (EMA) part of the SEM.</p>
<p>Transfer the SEM certificate (.p12 file) and <resource-id type="file-path">ECASSSLCA.cacert.jks</resource-id>
file to SEM in location:</p>
<p><preform>/home/asuser/certs</preform></p>
<p>If this directory does not exist, create it:</p>
<example condensed="yes" indent="column">
<preform>$ sudo mkdir /home/asuser/certs</preform>
</example>
<p>Copy the certificate files there, and change the ownership of the
certs folder and the files for asuser in <resource-id type="file-path">/home/asuser</resource-id>:</p>
<example condensed="yes" indent="column">
<preform>$ sudo chown asuser:users -R certs</preform>
</example>
<p>Configure ECAS by clicking the pen icon.</p>
<p>Click on <emph type="medium">Protocol parameters</emph> to get the following configuration view.</p>
<note>
<p>Instead of <resource-id type="file-path">superadmin.p12</resource-id> or any other <resource-id type="file-path">admin .p12</resource-id> install
the designated SEM certificate (SEMadmin.p12 in the sample below).
Providing SEM any extensive user rights is dangerous. Insert
correct parameters.</p>
</note>
<note>
<p>Parameter <emph type="medium">CA used to validate server</emph> should be set to the
jks file downloaded from the EJBCA™ GUI → <emph type="medium">CA Functions</emph> →
<emph type="medium">CA Structure &amp; CRLs</emph> using the <emph type="medium">Download JKS file</emph> for <emph type="medium">ECAS SSL CA</emph>
(see procedure to download the SSL CA Certificate above)</p>
</note>
<titled-block show="static"><title>Ericsson Multi Activation</title>
<figure align="left" float="no" indent="column">
<graphics xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="ericsson_multi_activation2.png" xlink:show="embed" xlink:actuate="onLoad" scalefit="1"/>
<caption/>
</figure>
</titled-block>
<p>Press <emph type="medium">Apply</emph> when ready to see the following successful green page
with the message "Change Operation successful".</p>
<p>Configure the following parameters (use the correct values, IssuerDN is
customer specific name):</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p><emph type="medium">CertProfile</emph>: NSDSendentityCertificateProfile</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">ProvisioningUrl</emph>: ejbca/ejbcaws/ejbcaws?wsdl</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">EntityProfile</emph>: NSDSendentityProfile</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">CertPEMFormat</emph>: YES</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">IssuerDN</emph>: CN=NS_subCA_2016_17</p>
</list-item>
<list-item compact="no">
<p><emph type="medium">SubjectDN</emph>:</p>
</list-item>
</list>
<p>However, before green light is achieved, some more steps need to be
performed:</p>
<step-list>
<sl-item>
<p>Populate all the SEM blades with the same .p12 and .jks: Login to
all of the remaining blades (three in this case), and copy both
certificate files to the following location:</p>
<stepxmp><preform>
/home/asuser/certs
</preform></stepxmp>
<p>If this directory does not exist, create it:</p>
<stepxmp>
<preform>$ sudo mkdir /home/asuser/certs</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>Copy the certificate files there, and change the ownership of the
certs folder and the files for asuser in <resource-id type="file-path">/home/asuser</resource-id>:</p>
<stepxmp>
<preform>$ sudo chown asuser:users -R certs</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>Create the same directory on all SEM blades, and scp the cert and
jks to all of them.</p>
</sl-item>
<sl-item>
<p>Copy the p12 and jks files from the 1st SEM to all other SEM instances:</p>
<stepxmp>
<preform>$ sudo -i
# scp ECASSSLCA.cacert.jks root@SEMx:/ECASSSLCA.cacert.jks
# scp semuser1.p12 root@SEMx:/semuser1.p12</preform>
</stepxmp>
</sl-item>
<sl-item>
<p>Move the certificate files to the correct place and change the ownership.</p>
<p>Then it should light up green.</p>
</sl-item>
</step-list>
</chl3>
<chl3 xml:id="configure_aaa"><title>Configure AAA</title>
<note>
<p>IPWorks/AAA support may be needed to be consulted.</p>
</note>
<p><emph type="medium">Prerequisites</emph>:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p><emph type="medium">login</emph> info and root access for the AAA/IPworks</p>
</list-item>
<list-item compact="no">
<p>possibility to transfer files created in ECAS to AAA/IPworks</p>
</list-item>
<list-item compact="no">
<p>3rd party certificate and key for AAA/IPworks (typically from a
Globally Trusted CA)</p>
</list-item>
</list>
<p>You may also refer to <emph type="medium">Non-SIM Device Solution Deployment Guide</emph>
(see references), chapter <emph type="medium">IPWorks NSDS Specific Configuration</emph>.</p>
<p>End user authentication in WiFi Calling Solution works so that the
end user (device) initiates EAP-TLS session towards ePDG, which
again relays the authentication towards the AAA (based on IPworks)
with Diameter protocol.</p>
<p>ePDG passes the username and the full certificate of the end user
to AAA.
AAA performs openssl verification of the certificate (that is, it
is valid, issued from the correct CA and not revoked) using the CA
information acquired from ECAS for this purpose (as described below).</p>
<p>AAA can store several CA certificates for user authentication. For
NSDS Solution Authentication, upload the NSDSrootCA and NSDSsubCA(s).</p>
<note>
<p>CA naming depends on the customer’s choice, for example
<resource-id type="file-path">Operator_issuing_CA_2016</resource-id>. Several subCAs can be installed in
advance to enable smooth transition when old CA expires.</p>
</note>
<note>
<p>The subCA (if created as recommended) is only valid for the
current year and the next year, note this down to avoid unnecessary
downtime and encourage the operator to create procedures for the
timely swap of subCA certificates, well in advance before expiry of
the current subCA.</p>
</note>
<p>To produce and transfer the rootCA and subCA certificates to the
AAA/Ipworks:</p>
<p>On the ECAS FE GUI, go to <emph type="medium">CA Structure &amp; CRLs</emph>, choose the
Basic Functions for CA: &lt;OPERATOR&gt;_rootCA, and click <emph type="medium">Download PEM file</emph>.</p>
<p>To get <emph type="medium">subCA</emph> certificate, choose appropriate subCA (validity for
this year and next year), and again click <emph type="medium">Download PEM file</emph>.</p>
<note>
<p>In NSDS 1.0, the use of automatically created CRLs is not
supported, due to AAA/Ipworks performance limitations. However, a
manually created CRL can sometimes be needed, for this note down the
<emph type="medium">Get CRL</emph> and <emph type="medium">Create CRL</emph> options. This possible future CRL can
then be stored as indicated in the table below, but is most
probably not available in a maiden installation scenario.</p>
</note>
<p>Transfer the RootCA and subCA certificate files to AAA/IPworks</p>
<p>AAA/IPworks:</p>
<p>Use the login info and transfer over the certs as indicated below.
Save all the certificate files to the following directories in IPWorks:</p>
<table indent="left-margin" condensed="no"><caption>Certificate File Directory</caption>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top"><tp>Certificate File</tp></entry>
<entry align="left" valign="top"><tp>Directory</tp></entry>
<entry align="left" valign="top"><tp>Format</tp></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><tp>CA Root Certificate</tp></entry>
<entry align="left" valign="top"><tp>/etc/ipworks/aaa/nsds/ca_cert_path</tp></entry>
<entry align="left" valign="top"><tp>PEM</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>CRL</tp></entry>
<entry align="left" valign="top"><tp>/etc/ipworks/aaa/nsds/crl_path</tp></entry>
<entry align="left" valign="top"><tp>PEM</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>3rd Party Certificate for The AAA/IPworks Server</tp></entry>
<entry align="left" valign="top"><tp>/etc/ipworks/aaa/nsds/serv_cert</tp></entry>
<entry align="left" valign="top"><tp>PEM</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>3rd Party Private Key of The AAA/IPworks Server</tp></entry>
<entry align="left" valign="top"><tp>/etc/ipworks/aaa/nsds/serv_key</tp></entry>
<entry align="left" valign="top"><tp/></entry>
</row>
</tbody>
</tgroup>
</table>
<p>Multiple certificates can be saved in the CA Root Certificate
directory.</p>
<p>The <emph type="medium">rootCA</emph> and <emph type="medium">subCA</emph> certificates from ECAS are both stored in
the directory for <emph type="medium">CA Root Certificate</emph>.</p>
<note>
<p>To avoid confusion, the AAA/IPworks is <emph type="medium">NOT</emph> communicating
actively with ECAS in <emph type="medium">NSDS 1.0</emph> only the above certificates are
stored to enable the openssl verification of the end user certificate
using the rootCA and subCA derived from ECAS.</p>
</note>
<p>As ECAS is not used as a <emph type="medium">globally trusted CA</emph> in this solution, a
3rd Party CA needs to produce the certificates for AAA/IPworks to
enable it to communicate with other nodes in the NSDS 1.0 solution.
Creation and transfer of these certificates is out of the scope for
this document.</p>
<p>The 3rd Party Certificate for the AAA/IPworks server is expected to
be in PEM format and the server key is probaly also (but not
necessarily) in the same format. Consult AAA/IPworks support as needed.</p>
<p>The files for the server certificate and the key are stored in the
directories indicated in the above listing. The key file can be of
type <resource-id type="file-path">.key</resource-id>.</p>
</chl3>
</chl2>
</chl1>
<chl1 xml:id="troubleshooting"><title>Troubleshooting</title>
<p>For troubleshooting, refer to the <ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Troubleshooting Guide" xlink:title="Troubleshooting Guide">Troubleshooting Guide</ulink>.</p>
</chl1>
<chl1 xml:id="backup_amp_restore"><title>Backup &amp; Restore</title>
<p>For backup &amp; restore, refer to the <ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Data Backup and Restore Guide" xlink:title="Data Backup and Restore Guide">Data Backup and Restore Guide</ulink>,
and the <ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Data Collection Guide" xlink:title="Data Collection Guide">Data Collection Guide</ulink>.</p>
<p>At the high level, the backup scope is:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Key material: keys can be extracted as encrypted files and
backed up as such.</p>
<note>
<p>For restoration, they must be exposed
to another instance of the same vendor’s HSM (for Thales).</p>
</note>
</list-item>
<list-item compact="no">
<p>Security World, Module and OCS material: all can acquired from
ECAS FEs as encrypted files and backed up as such.</p>
<note>
<p>For restoration, they must be exposed to another instance of the same
vendor’s HSM (for Thales).</p>
</note>
</list-item>
<list-item compact="no">
<p>ECAS TrustStore (that must be in synch with content of the DB for
access), ECAS SSL certificate</p>
</list-item>
<list-item compact="no">
<p>VMs, application configurations, SSH keys, customer specific
directory, and so on, that is, implementation-specific system
elements.</p>
</list-item>
<list-item compact="no">
<p>Database data: this contains the information of certificates given
to end entity devices, ECAS users and access policies, the
server’s SSL certificate, and so on. In essence, the database is the
CA.</p>
</list-item>
<list-item compact="no">
<p>Logs (application and system): these should preferably be
extracted out of the system regularly also to avoid tampering by
attackers.</p>
</list-item>
</list>
<p>Restoration procedures depend on failure scenarios.</p>
<p>ECAS is designed for High Availability, and failure of any
individual component or VM will not result in full outage.</p>
</chl1>
<chl1 xml:id="anchor-recommended-wifi-params-appendix"><title>Recommended Parameters Value for WiFi Calling Solution</title>
<chl2 xml:id="basic_ca_configuration"><title>Basic CA Configuration</title>
<table condensed="no" indent="column"><caption>Root CA</caption>
<tgroup cols="2">
<colspec colname="col_1" colwidth="200"/>
<colspec colname="col_2" colwidth="200"/>
<thead>
<row>
<entry align="left" valign="top"><tp>Parameter</tp></entry>
<entry align="left" valign="top"><tp>Sample value</tp></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><tp>CA Name</tp></entry>
<entry align="left" valign="top"><tp>OPERATOR_rootCA</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key type</tp></entry>
<entry align="left" valign="top"><tp>RSA</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key strength</tp></entry>
<entry align="left" valign="top"><tp>4096</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Hash</tp></entry>
<entry align="left" valign="top"><tp>SHA256</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Validity</tp></entry>
<entry align="left" valign="top"><tp>10 years</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>OCS Protection</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
</tbody>
</tgroup>
</table>
<table condensed="no" indent="column"><caption>Sub CA (several over time)</caption>
<tgroup cols="2">
<colspec colname="col_1" colwidth="200"/>
<colspec colname="col_2" colwidth="200"/>
<thead>
<row>
<entry align="left" valign="top"><tp>Parameter</tp></entry>
<entry align="left" valign="top"><tp>Sample value</tp></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><tp>CA Name</tp></entry>
<entry align="left" valign="top"><tp>OPERATOR_Issuing_subCA_2017</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key type</tp></entry>
<entry align="left" valign="top"><tp>RSA</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key strength</tp></entry>
<entry align="left" valign="top"><tp>2048</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Hash</tp></entry>
<entry align="left" valign="top"><tp>SHA256</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Validity</tp></entry>
<entry align="left" valign="top"><tp>2 years (start year +1)</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique Pub.Keys</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique DN</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
</tbody>
</tgroup>
</table>
<table condensed="no" indent="column"><caption>Sub CA (several over time)</caption>
<tgroup cols="2">
<colspec colname="col_1" colwidth="200"/>
<colspec colname="col_2" colwidth="200"/>
<thead>
<row>
<entry align="left" valign="top"><tp>Parameter</tp></entry>
<entry align="left" valign="top"><tp>Sample value</tp></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><tp>CA Name</tp></entry>
<entry align="left" valign="top"><tp>OPERATOR_Issuing_subCA_2018</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key type</tp></entry>
<entry align="left" valign="top"><tp>RSA</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key strength</tp></entry>
<entry align="left" valign="top"><tp>2048</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Hash</tp></entry>
<entry align="left" valign="top"><tp>SHA256</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Validity</tp></entry>
<entry align="left" valign="top"><tp>2 years (start year +1)</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique Pub.Keys</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique DN</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
</tbody>
</tgroup>
</table>
<table condensed="no" indent="column"><caption>Sub CA (several over time)</caption>
<tgroup cols="2">
<colspec colname="col_1" colwidth="200"/>
<colspec colname="col_2" colwidth="200"/>
<thead>
<row>
<entry align="left" valign="top"><tp>Parameter</tp></entry>
<entry align="left" valign="top"><tp>Sample value</tp></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><tp>CA Name</tp></entry>
<entry align="left" valign="top"><tp>OPERATOR_Issuing_subCA_2019</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key type</tp></entry>
<entry align="left" valign="top"><tp>RSA</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key strength</tp></entry>
<entry align="left" valign="top"><tp>2048</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Hash</tp></entry>
<entry align="left" valign="top"><tp>SHA256</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Validity</tp></entry>
<entry align="left" valign="top"><tp>2 years (start year +1)</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique Pub.Keys</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique DN</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
</tbody>
</tgroup>
</table>
<table condensed="no" indent="column"><caption>Sub CA (several over time)</caption>
<tgroup cols="2">
<colspec colname="col_1" colwidth="200"/>
<colspec colname="col_2" colwidth="200"/>
<thead>
<row>
<entry align="left" valign="top"><tp>Parameter</tp></entry>
<entry align="left" valign="top"><tp>Sample value</tp></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><tp>CA Name</tp></entry>
<entry align="left" valign="top"><tp>OPERATOR_Issuing_subCA_2020</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key type</tp></entry>
<entry align="left" valign="top"><tp>RSA</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key strength</tp></entry>
<entry align="left" valign="top"><tp>2048</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Hash</tp></entry>
<entry align="left" valign="top"><tp>SHA256</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Validity</tp></entry>
<entry align="left" valign="top"><tp>2 years (start year +1)</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique Pub.Keys</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique DN</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
</tbody>
</tgroup>
</table>
<table condensed="no" indent="column"><caption>Sub CA (several over time)</caption>
<tgroup cols="2">
<colspec colname="col_1" colwidth="200"/>
<colspec colname="col_2" colwidth="200"/>
<thead>
<row>
<entry align="left" valign="top"><tp>Parameter</tp></entry>
<entry align="left" valign="top"><tp>Sample value</tp></entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><tp>CA Name</tp></entry>
<entry align="left" valign="top"><tp>OPERATOR_Issuing_subCA_2021</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key type</tp></entry>
<entry align="left" valign="top"><tp>RSA</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Key strength</tp></entry>
<entry align="left" valign="top"><tp>2048</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Hash</tp></entry>
<entry align="left" valign="top"><tp>SHA256</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Validity</tp></entry>
<entry align="left" valign="top"><tp>2 years (start year +1)</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique Pub.Keys</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
<row>
<entry align="left" valign="top"><tp>Enforce Unique DN</tp></entry>
<entry align="left" valign="top"><tp>yes</tp></entry>
</row>
</tbody>
</tgroup>
</table>
</chl2>
</chl1>
<chl1 xml:id="anchor-integration-records"><title>Integration Records</title>
<p>During the installation, it is recommended to amend all relevant information
of the procedure. To ensure the correct procedure, please fill out the
<ulink xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="urn:x-ericsson:r2:reg-doc:*-*:*:*?title=Configuration Parameters, WiFi Calling for Multi Device Solution" xlink:title="Configuration Parameters, WiFi Calling for Multi Device Solution">Configuration Parameters, WiFi Calling for Multi Device Solution</ulink>.</p>
<p>The following items should be recorded for auditability and operation purposes:</p>
<step-list>
<sl-item>
<p>Fill in the network plan and configuration parameters in the "workbook"
→ <emph type="medium">Network Plan and Config</emph> tab:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>IP addresses</p>
</list-item>
<list-item compact="no">
<p>Networks</p>
</list-item>
<list-item compact="no">
<p>Services: NTP and DNS</p>
</list-item>
<list-item compact="no">
<p>Hostname or FQDN (Fully Qualified Domain Name) for SSL certificate.</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>CA hierarchies, the proposed ones are:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Management CA: root level only</p>
</list-item>
<list-item compact="no">
<p>ECAS SSL CA: root level only</p>
</list-item>
<list-item compact="no">
<p>Wifi Calling Solution Root CA (NSDS Root CA)</p>
</list-item>
<list-item compact="no">
<p>Wifi Calling Solution Sub CA (NSDS Issuing Sub CA)</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>HSM ACS card list:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>workbook → <emph type="medium">HSM parameters</emph> tab → <emph type="medium">ACS Cards</emph> table</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>HSM OCS card list:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>workbook → <emph type="medium">HSM parameters</emph> tab → <emph type="medium">OCS Cards</emph> table</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>ACS HSM cards record:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>workbook → <emph type="medium">ACS and OCS Use Records</emph> tab → <emph type="medium">ACS Usage Record</emph></p>
</list-item>
<list-item compact="no">
<p>Operation</p>
</list-item>
<list-item compact="no">
<p>Date</p>
</list-item>
<list-item compact="no">
<p>Time</p>
</list-item>
<list-item compact="no">
<p>Location</p>
</list-item>
<list-item compact="no">
<p>Card information</p>
</list-item>
<list-item compact="no">
<p>Additional notes</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>Mgmt OCS HSM cards record:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>workbook → <emph type="medium">ACS and OCS Use Records</emph> tab → <emph type="medium">MGMT OCS Usage Record</emph></p>
</list-item>
<list-item compact="no">
<p>Operation</p>
</list-item>
<list-item compact="no">
<p>Date</p>
</list-item>
<list-item compact="no">
<p>Time</p>
</list-item>
<list-item compact="no">
<p>Location</p>
</list-item>
<list-item compact="no">
<p>Card information</p>
</list-item>
<list-item compact="no">
<p>Additional notes</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>Root OCS HSM cards record:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>workbook → <emph type="medium">ACS and OCS Use Records</emph> tab → <emph type="medium">RootCA OCS Usage Record</emph></p>
</list-item>
<list-item compact="no">
<p>Operation</p>
</list-item>
<list-item compact="no">
<p>Date</p>
</list-item>
<list-item compact="no">
<p>Time</p>
</list-item>
<list-item compact="no">
<p>Location</p>
</list-item>
<list-item compact="no">
<p>Card information</p>
</list-item>
<list-item compact="no">
<p>Additional notes</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>HSM agreed quorums:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>workbook → <emph type="medium">HSM Parameters</emph> tab → <emph type="medium">HSM Basic Configuration Options</emph></p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>Which card files are mapped to which physical cards.</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>For management OCS: workbook → <emph type="medium">HSM File Record</emph> tab → <emph type="medium">Management OCS</emph> table</p>
</list-item>
<list-item compact="no">
<p>For RootCA OCS: workbook → <emph type="medium">HSM File Record</emph> tab → <emph type="medium">RootCA OCS</emph> table</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>Which files are mapped to which management keys.</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>For management keys: workbook → <emph type="medium">HSM File Record</emph> tab → <emph type="medium">ECAS Management CA Keys</emph> table</p>
</list-item>
<list-item compact="no">
<p>For SSL CA keys: workbook → <emph type="medium">HSM File Record</emph> tab → <emph type="medium">SSL CA</emph> table</p>
</list-item>
<list-item compact="no">
<p>For Root CA keys: workbook → <emph type="medium">HSM File Record</emph> tab → <emph type="medium">Wifi Calling Solution Root CA Keys</emph> table</p>
</list-item>
<list-item compact="no">
<p>For Root SubCA keys: workbook → <emph type="medium">HSM File Record</emph> tab → <emph type="medium">Wifi Calling Solution Sub CA Keys</emph> table</p>
</list-item>
</list>
</sl-item>
<sl-item>
<p>User certificate information:</p>
<list type="unordered" compact="no">
<list-item compact="no">
<p>Record username and password: workbook → <emph type="medium">Passwords</emph> tab → Front End chart</p>
</list-item>
</list>
</sl-item>
</step-list>
<p>The following items should be backed up for maintainability and operation purposes:</p>
<step-list>
<sl-item>
<p>HSM root key material</p>
</sl-item>
<sl-item>
<p>HSM protected key material</p>
</sl-item>
<sl-item>
<p>Trustore</p>
</sl-item>
<sl-item>
<p>Keystore</p>
</sl-item>
<sl-item>
<p>Management keys</p>
</sl-item>
<sl-item>
<p>ECAS SSL CA certificates</p>
</sl-item>
<sl-item>
<p>EJBCA™ Token Certificate Enrollment</p>
</sl-item>
<sl-item>
<p>FE-OAM</p>
</sl-item>
<sl-item>
<p>FE-OAM generated keys and mapped filenames</p>
</sl-item>
<sl-item>
<p>FE-RCA (if configured)</p>
</sl-item>
<sl-item>
<p>SEM certificate</p>
</sl-item>
<sl-item>
<p>BE; Database content</p>
</sl-item>
</step-list>
</chl1>
<chl1 xml:id="terminology_abbreviations_and_concepts"><title>Terminology - Abbreviations and Concepts</title>
<def-list>
<dl-item>
<term>AAA</term>
<def>
<p>Authentication, Authorization and Accounting (server)</p>
</def>
</dl-item>
<dl-item>
<term>ACS</term>
<def>
<p>Administrator Card Set</p>
</def>
</dl-item>
<dl-item>
<term>BE</term>
<def>
<p>Backend</p>
</def>
</dl-item>
<dl-item>
<term>CA</term>
<def>
<p>Certificate Authority</p>
</def>
</dl-item>
<dl-item>
<term>CRL</term>
<def>
<p>Certificate Revocation List</p>
</def>
</dl-item>
<dl-item>
<term>CSR</term>
<def>
<p>Certificate Signing Request</p>
</def>
</dl-item>
<dl-item>
<term>DB</term>
<def>
<p>Database</p>
</def>
</dl-item>
<dl-item>
<term>EJBCA™</term>
<def>
<p>Enterprise Java Beans Certificate Authority (PrimeKey Trademark)</p>
</def>
</dl-item>
<dl-item>
<term>FE</term>
<def>
<p>Front End</p>
</def>
</dl-item>
<dl-item>
<term>FE-OAM</term>
<def>
<p>Front End Operations And Maintenance</p>
</def>
</dl-item>
<dl-item>
<term>ePDG</term>
<def>
<p>evolved Packet Data Gateway</p>
</def>
</dl-item>
<dl-item>
<term>HSM</term>
<def>
<p>Hardware Security Module</p>
</def>
</dl-item>
<dl-item>
<term>IPworks</term>
<def>
<p>Ericsson IP infrastructure product providing service for RfCs with relation to DNS, DHCP, ENUM and AAA, 3GPP and GSMA specifications for AAA and ENUM, as well as ETSI specifications for CLF</p>
</def>
</dl-item>
<dl-item>
<term>LB</term>
<def>
<p>Load Balancer</p>
</def>
</dl-item>
<dl-item>
<term>MGMT</term>
<def>
<p>Management</p>
</def>
</dl-item>
<dl-item>
<term>NSDS</term>
<def>
<p>Non-SIM Device Solution</p>
</def>
</dl-item>
<dl-item>
<term>O&amp;M</term>
<def>
<p>Operations and Maintenance (network for remote access)</p>
</def>
</dl-item>
<dl-item>
<term>OAM</term>
<def>
<p>Operations and Maintenance (Virtual Machine)</p>
</def>
</dl-item>
<dl-item>
<term>OCS</term>
<def>
<p>Operator Card Set</p>
</def>
</dl-item>
<dl-item>
<term>OCSP</term>
<def>
<p>Operations Support System - Radio and Core</p>
</def>
</dl-item>
<dl-item>
<term>PKI</term>
<def>
<p>Public Key Infrastructure</p>
</def>
</dl-item>
<dl-item>
<term>PKCS</term>
<def>
<p>Public-Key Cryptography Standards</p>
</def>
</dl-item>
<dl-item>
<term>RFS</term>
<def>
<p>Remote File System</p>
</def>
</dl-item>
<dl-item>
<term>SEM</term>
<def>
<p>Secure Entitlement Manager</p>
</def>
</dl-item>
<dl-item>
<term>SES</term>
<def>
<p>Service Enrollment Server</p>
</def>
</dl-item>
<dl-item>
<term>SSD</term>
<def>
<p>Solid-state Drive</p>
</def>
</dl-item>
<dl-item>
<term>SW</term>
<def>
<p>Software</p>
</def>
</dl-item>
<dl-item>
<term>VIP</term>
<def>
<p>Virtual IP</p>
</def>
</dl-item>
<dl-item>
<term>WAN</term>
<def>
<p>Wide Area Network</p>
</def>
</dl-item>
</def-list>
</chl1>
</body>
<back>
<reference xml:id="references">
<reference-list><rf-subsection/>
<rf-item xml:id="RefConfParameters">
<rf-title>Configuration Parameters, WiFi Calling for Multi Device Solution</rf-title>
<doc-no>1/002 01-HAX 101 09/1 Uen</doc-no></rf-item>
<rf-item xml:id="RefInstInstruct">
<rf-title>Installation Instruction</rf-title>
<doc-no>1/1531-HAX 101 09/1 Uen</doc-no></rf-item>
<rf-item xml:id="RefTroublShootGuide">
<rf-title>Troubleshooting Guide</rf-title>
<doc-no>6/1553-HAX 101 09/1 Uen</doc-no></rf-item>
<rf-item xml:id="RefDimGuideline">
<rf-title>Dimensioning Guideline</rf-title>
<doc-no>192 02-FGC 101 3192 Uen</doc-no></rf-item>
<rf-item xml:id="RefNonSIMDevSolDeplGuide">
<rf-title>Non-SIM Device Solution Deployment Guide</rf-title>
<doc-no>6/102 62-FCP 131 1536 Uen</doc-no></rf-item>
<rf-item xml:id="RefAlarmManGuide">
<rf-title>Alarm Management Guide</rf-title>
<doc-no>7/1553-HAX 101 09/1 Uen</doc-no></rf-item>
<rf-item xml:id="RefDataBackupAndRestGuide">
<rf-title>Data Backup and Restore Guide</rf-title>
<doc-no>9/1553-HAX 101 09/1 Uen</doc-no></rf-item>
<rf-item xml:id="RefDataCollectGuide">
<rf-title>Data Collection Guide</rf-title>
<doc-no>10/1553-HAX 101 09/1 Uen</doc-no></rf-item>
<rf-item xml:id="RefTypConventions">
<rf-title>Typographic Conventions</rf-title>
<doc-no>1/1551-FCK 101 05 Uen</doc-no></rf-item>
</reference-list>
</reference>
</back>
</doc>
